{"version":3,"file":"about-components.min.js","mappings":"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","sources":["webpack://gusli-studio/./node_modules/gsap/ScrollToPlugin.js","webpack://gusli-studio/./#src/js/animations/animation-index.jsx","webpack://gusli-studio/./#src/js/animations/anime-js.jsx","webpack://gusli-studio/./#src/js/components/About.jsx","webpack://gusli-studio/./#src/js/app/AboutComponents.jsx","webpack://gusli-studio/./#src/js/components/Menu-float.jsx","webpack://gusli-studio/./node_modules/@remix-run/router/dist/router.js","webpack://gusli-studio/./node_modules/react-router/dist/index.js","webpack://gusli-studio/./#src/js/components/Members.jsx","webpack://gusli-studio/./#src/js/layouts/Footer.jsx","webpack://gusli-studio/./#src/js/layouts/Header.jsx","webpack://gusli-studio/./node_modules/lodash.throttle/index.js","webpack://gusli-studio/./node_modules/react-dom/client.js","webpack://gusli-studio/./node_modules/react-image-webp/dist/utils/index.js","webpack://gusli-studio/./node_modules/react-scroll/modules/components/Button.js","webpack://gusli-studio/./node_modules/react-scroll/modules/components/Element.js","webpack://gusli-studio/./node_modules/react-scroll/modules/components/Link.js","webpack://gusli-studio/./node_modules/react-scroll/modules/index.js","webpack://gusli-studio/./node_modules/react-scroll/modules/mixins/Helpers.js","webpack://gusli-studio/./node_modules/react-scroll/modules/mixins/animate-scroll.js","webpack://gusli-studio/./node_modules/react-scroll/modules/mixins/cancel-events.js","webpack://gusli-studio/./node_modules/react-scroll/modules/mixins/passive-event-listeners.js","webpack://gusli-studio/./node_modules/react-scroll/modules/mixins/scroll-element.js","webpack://gusli-studio/./node_modules/react-scroll/modules/mixins/scroll-events.js","webpack://gusli-studio/./node_modules/react-scroll/modules/mixins/scroll-hash.js","webpack://gusli-studio/./node_modules/react-scroll/modules/mixins/scroll-link.js","webpack://gusli-studio/./node_modules/react-scroll/modules/mixins/scroll-spy.js","webpack://gusli-studio/./node_modules/react-scroll/modules/mixins/scroller.js","webpack://gusli-studio/./node_modules/react-scroll/modules/mixins/smooth.js","webpack://gusli-studio/./node_modules/react-scroll/modules/mixins/utils.js"],"sourcesContent":["/*!\n * ScrollToPlugin 3.12.5\n * https://gsap.com\n *\n * @license Copyright 2008-2024, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license or for\n * Club GSAP members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar gsap,\n    _coreInitted,\n    _window,\n    _docEl,\n    _body,\n    _toArray,\n    _config,\n    ScrollTrigger,\n    _windowExists = function _windowExists() {\n  return typeof window !== \"undefined\";\n},\n    _getGSAP = function _getGSAP() {\n  return gsap || _windowExists() && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n},\n    _isString = function _isString(value) {\n  return typeof value === \"string\";\n},\n    _isFunction = function _isFunction(value) {\n  return typeof value === \"function\";\n},\n    _max = function _max(element, axis) {\n  var dim = axis === \"x\" ? \"Width\" : \"Height\",\n      scroll = \"scroll\" + dim,\n      client = \"client\" + dim;\n  return element === _window || element === _docEl || element === _body ? Math.max(_docEl[scroll], _body[scroll]) - (_window[\"inner\" + dim] || _docEl[client] || _body[client]) : element[scroll] - element[\"offset\" + dim];\n},\n    _buildGetter = function _buildGetter(e, axis) {\n  //pass in an element and an axis (\"x\" or \"y\") and it'll return a getter function for the scroll position of that element (like scrollTop or scrollLeft, although if the element is the window, it'll use the pageXOffset/pageYOffset or the documentElement's scrollTop/scrollLeft or document.body's. Basically this streamlines things and makes a very fast getter across browsers.\n  var p = \"scroll\" + (axis === \"x\" ? \"Left\" : \"Top\");\n\n  if (e === _window) {\n    if (e.pageXOffset != null) {\n      p = \"page\" + axis.toUpperCase() + \"Offset\";\n    } else {\n      e = _docEl[p] != null ? _docEl : _body;\n    }\n  }\n\n  return function () {\n    return e[p];\n  };\n},\n    _clean = function _clean(value, index, target, targets) {\n  _isFunction(value) && (value = value(index, target, targets));\n\n  if (typeof value !== \"object\") {\n    return _isString(value) && value !== \"max\" && value.charAt(1) !== \"=\" ? {\n      x: value,\n      y: value\n    } : {\n      y: value\n    }; //if we don't receive an object as the parameter, assume the user intends \"y\".\n  } else if (value.nodeType) {\n    return {\n      y: value,\n      x: value\n    };\n  } else {\n    var result = {},\n        p;\n\n    for (p in value) {\n      result[p] = p !== \"onAutoKill\" && _isFunction(value[p]) ? value[p](index, target, targets) : value[p];\n    }\n\n    return result;\n  }\n},\n    _getOffset = function _getOffset(element, container) {\n  element = _toArray(element)[0];\n\n  if (!element || !element.getBoundingClientRect) {\n    return console.warn(\"scrollTo target doesn't exist. Using 0\") || {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var rect = element.getBoundingClientRect(),\n      isRoot = !container || container === _window || container === _body,\n      cRect = isRoot ? {\n    top: _docEl.clientTop - (_window.pageYOffset || _docEl.scrollTop || _body.scrollTop || 0),\n    left: _docEl.clientLeft - (_window.pageXOffset || _docEl.scrollLeft || _body.scrollLeft || 0)\n  } : container.getBoundingClientRect(),\n      offsets = {\n    x: rect.left - cRect.left,\n    y: rect.top - cRect.top\n  };\n\n  if (!isRoot && container) {\n    //only add the current scroll position if it's not the window/body.\n    offsets.x += _buildGetter(container, \"x\")();\n    offsets.y += _buildGetter(container, \"y\")();\n  }\n\n  return offsets;\n},\n    _parseVal = function _parseVal(value, target, axis, currentVal, offset) {\n  return !isNaN(value) && typeof value !== \"object\" ? parseFloat(value) - offset : _isString(value) && value.charAt(1) === \"=\" ? parseFloat(value.substr(2)) * (value.charAt(0) === \"-\" ? -1 : 1) + currentVal - offset : value === \"max\" ? _max(target, axis) - offset : Math.min(_max(target, axis), _getOffset(value, target)[axis] - offset);\n},\n    _initCore = function _initCore() {\n  gsap = _getGSAP();\n\n  if (_windowExists() && gsap && typeof document !== \"undefined\" && document.body) {\n    _window = window;\n    _body = document.body;\n    _docEl = document.documentElement;\n    _toArray = gsap.utils.toArray;\n    gsap.config({\n      autoKillThreshold: 7\n    });\n    _config = gsap.config();\n    _coreInitted = 1;\n  }\n};\n\nexport var ScrollToPlugin = {\n  version: \"3.12.5\",\n  name: \"scrollTo\",\n  rawVars: 1,\n  register: function register(core) {\n    gsap = core;\n\n    _initCore();\n  },\n  init: function init(target, value, tween, index, targets) {\n    _coreInitted || _initCore();\n    var data = this,\n        snapType = gsap.getProperty(target, \"scrollSnapType\");\n    data.isWin = target === _window;\n    data.target = target;\n    data.tween = tween;\n    value = _clean(value, index, target, targets);\n    data.vars = value;\n    data.autoKill = !!value.autoKill;\n    data.getX = _buildGetter(target, \"x\");\n    data.getY = _buildGetter(target, \"y\");\n    data.x = data.xPrev = data.getX();\n    data.y = data.yPrev = data.getY();\n    ScrollTrigger || (ScrollTrigger = gsap.core.globals().ScrollTrigger);\n    gsap.getProperty(target, \"scrollBehavior\") === \"smooth\" && gsap.set(target, {\n      scrollBehavior: \"auto\"\n    });\n\n    if (snapType && snapType !== \"none\") {\n      // disable scroll snapping to avoid strange behavior\n      data.snap = 1;\n      data.snapInline = target.style.scrollSnapType;\n      target.style.scrollSnapType = \"none\";\n    }\n\n    if (value.x != null) {\n      data.add(data, \"x\", data.x, _parseVal(value.x, target, \"x\", data.x, value.offsetX || 0), index, targets);\n\n      data._props.push(\"scrollTo_x\");\n    } else {\n      data.skipX = 1;\n    }\n\n    if (value.y != null) {\n      data.add(data, \"y\", data.y, _parseVal(value.y, target, \"y\", data.y, value.offsetY || 0), index, targets);\n\n      data._props.push(\"scrollTo_y\");\n    } else {\n      data.skipY = 1;\n    }\n  },\n  render: function render(ratio, data) {\n    var pt = data._pt,\n        target = data.target,\n        tween = data.tween,\n        autoKill = data.autoKill,\n        xPrev = data.xPrev,\n        yPrev = data.yPrev,\n        isWin = data.isWin,\n        snap = data.snap,\n        snapInline = data.snapInline,\n        x,\n        y,\n        yDif,\n        xDif,\n        threshold;\n\n    while (pt) {\n      pt.r(ratio, pt.d);\n      pt = pt._next;\n    }\n\n    x = isWin || !data.skipX ? data.getX() : xPrev;\n    y = isWin || !data.skipY ? data.getY() : yPrev;\n    yDif = y - yPrev;\n    xDif = x - xPrev;\n    threshold = _config.autoKillThreshold;\n\n    if (data.x < 0) {\n      //can't scroll to a position less than 0! Might happen if someone uses a Back.easeOut or Elastic.easeOut when scrolling back to the top of the page (for example)\n      data.x = 0;\n    }\n\n    if (data.y < 0) {\n      data.y = 0;\n    }\n\n    if (autoKill) {\n      //note: iOS has a bug that throws off the scroll by several pixels, so we need to check if it's within 7 pixels of the previous one that we set instead of just looking for an exact match.\n      if (!data.skipX && (xDif > threshold || xDif < -threshold) && x < _max(target, \"x\")) {\n        data.skipX = 1; //if the user scrolls separately, we should stop tweening!\n      }\n\n      if (!data.skipY && (yDif > threshold || yDif < -threshold) && y < _max(target, \"y\")) {\n        data.skipY = 1; //if the user scrolls separately, we should stop tweening!\n      }\n\n      if (data.skipX && data.skipY) {\n        tween.kill();\n        data.vars.onAutoKill && data.vars.onAutoKill.apply(tween, data.vars.onAutoKillParams || []);\n      }\n    }\n\n    if (isWin) {\n      _window.scrollTo(!data.skipX ? data.x : x, !data.skipY ? data.y : y);\n    } else {\n      data.skipY || (target.scrollTop = data.y);\n      data.skipX || (target.scrollLeft = data.x);\n    }\n\n    if (snap && (ratio === 1 || ratio === 0)) {\n      y = target.scrollTop;\n      x = target.scrollLeft;\n      snapInline ? target.style.scrollSnapType = snapInline : target.style.removeProperty(\"scroll-snap-type\");\n      target.scrollTop = y + 1; // bug in Safari causes the element to totally reset its scroll position when scroll-snap-type changes, so we need to set it to a slightly different value and then back again to work around this bug.\n\n      target.scrollLeft = x + 1;\n      target.scrollTop = y;\n      target.scrollLeft = x;\n    }\n\n    data.xPrev = data.x;\n    data.yPrev = data.y;\n    ScrollTrigger && ScrollTrigger.update();\n  },\n  kill: function kill(property) {\n    var both = property === \"scrollTo\",\n        i = this._props.indexOf(property);\n\n    if (both || property === \"scrollTo_x\") {\n      this.skipX = 1;\n    }\n\n    if (both || property === \"scrollTo_y\") {\n      this.skipY = 1;\n    }\n\n    i > -1 && this._props.splice(i, 1);\n    return !this._props.length;\n  }\n};\nScrollToPlugin.max = _max;\nScrollToPlugin.getOffset = _getOffset;\nScrollToPlugin.buildGetter = _buildGetter;\n_getGSAP() && gsap.registerPlugin(ScrollToPlugin);\nexport { ScrollToPlugin as default };","import { gsap } from 'gsap';\nimport { ScrollSmoother } from 'gsap/ScrollSmoother';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\nimport { ScrollToPlugin } from 'gsap/ScrollToPlugin';\n// import { Flip } from 'gsap/Flip';\n//* ----------------------------------------------------------------------------\ngsap.registerPlugin(ScrollTrigger, ScrollSmoother, ScrollToPlugin);\nScrollTrigger.config({ ignoreMobileResize: true });\n// ScrollTrigger.normalizeScroll(true); \n//* ----------------------------------------------------------------------------\n// Check if the device is mobile \nconst isMobile = /Mobi|Android/i.test(navigator.userAgent);\nexport let smoother;\n\n//* Устанавливаем плавную прокрутку страницы\nif (!isMobile) {\n\tsmoother = ScrollSmoother.create({\n\t\twrapper: '#wrapper',\n\t\tcontent: '#content',\n\t\tsmooth: 1,\n\t\teffects: true,\n\t\tnormalizeScroll: true,\n\t\t// ignoreMobile: true,\n\t});\n}\n\n//* ----------------------------------------------------------------------------\nexport function applyEffects(smoother) {\n\tsmoother.effects('.services-slide__column', {\n\t\tspeed: (i) => {\n\t\t\t// Desktop three columns layout\n\t\t\tif (window.matchMedia('(min-width:730)').matches) {\n\t\t\t\t// Center column is faster\n\t\t\t\treturn i % 3 === 1 ? 1.15 : 1;\n\t\t\t} else {\n\t\t\t\t// Mobile, right column is fast\n\t\t\t\treturn i % 2 === 0 ? 0.9 : 1.15;\n\t\t\t}\n\t\t}\n\t});\n}\n\n//* ----------------------- Секция \"Parallax Effects\" --------------------------\nexport function applyParallaxEffects(smoother, element) {\n\n\tif (smoother) {\n\t\tsmoother.effects(element, {\n\t\t\tspeed: (i) => {\n\t\t\t\treturn i % 1 === 0 ? 0.5 : 1.15;\n\t\t\t}\n\t\t});\n\t}\n}\n\n//* ----------------------------------------------------------------------------\nexport function animateTitles(element, trigger, endTrigger, start, end) {\n\tgsap.from(element, {\n\t\ty: 150,\n\t\tduration: 1,\n\t\topacity: 0,\n\t\tscrollTrigger: {\n\t\t\ttrigger: trigger,\n\t\t\tstart: `top bottom-${start}}`,\n\t\t\tendTrigger: endTrigger,\n\t\t\tend: `bottom bottom-${end}`,\n\t\t\ttoggleActions: 'play none none reverse',\n\t\t\t// markers: true,\n\t\t},\n\t});\n}\n\n//* Секция \"#main-slide\".\nexport function initSectionTriggerMove(trigger, targets) {\n\tScrollTrigger.create({\n\t\ttrigger: trigger,\n\t\t/* Начинаем событие, когда верхняя граница элемента-1 находится на 100px\n\t\tниже верха окна браузера*/\n\t\tstart: 'top center',\n\t\tendTrigger: trigger, //* Конец события - конец документа\n\t\t/*Конец событие когда верхняя граница элемента 1 достигнет верха окна\n\t\tбраузера*/\n\t\tend: 'bottom center',\n\t\ttoggleClass: {\n\t\t\ttargets: targets,\n\t\t\tclassName: '_active'\n\t\t},\n\t\t// markers: true\n\t});\n}\n\n//* ----------------------------------------------------------------------------\nexport function tlFooterParallel() {\n\tconst tlParallel = gsap.timeline({\n\t\tscrollTrigger: {\n\t\t\ttrigger: '.footer',\n\t\t\tstart: 'top bottom',\n\t\t\tendTrigger: '.footer',\n\t\t\tend: 'bottom bottom+=300',\n\t\t\tscrub: 2,\n\t\t\ttoggleActions: 'play none none reverse',\n\t\t\t// markers: true,\n\t\t}\n\t});\n\ttlParallel.from('.footer .el-1', {\n\t\tx: -250,\n\t\tduration: 1,\n\t\topacity: 0,\n\t\tease: 'sine.inOut',\n\t});\n\n\ttlParallel.from('.el-2', {\n\t\tx: window.innerWidth <= 680 ? 350 : 0,\n\t\ty: window.innerWidth > 680 ? 150 : 0,\n\t\tduration: 1,\n\t\topacity: 0,\n\t\tease: 'sine.inOut',\n\t}, '-=1');\n\n\ttlParallel.from('.el-3', {\n\t\tx: window.innerWidth <= 680 ? -350 : (window.innerWidth > 680 ? 350 : 0),\n\t\tduration: 1,\n\t\topacity: 0,\n\t\tease: 'sine.inOut',\n\t}, '-=1');\n}\n\n//* ----------------------------------------------------------------------------\nexport function tlFooterHorizontal() {\n\tconst tlHorizontal = gsap.timeline({\n\t\tscrollTrigger: {\n\t\t\ttrigger: '.footer',\n\t\t\tstart: 'top bottom',\n\t\t\tendTrigger: '.footer',\n\t\t\tend: 'bottom bottom',\n\t\t\tscrub: 2,\n\t\t\ttoggleActions: 'play none none reverse',\n\t\t\t// markers: true,\n\t\t}\n\t});\n\n\ttlHorizontal.from('.el-4', {\n\t\ty: 150,\n\t\tduration: 1,\n\t\topacity: 0,\n\t\tease: 'sine.inOut',\n\t}, '-=0.5');\n\n\ttlHorizontal.from('.el-5', {\n\t\ty: 350,\n\t\tduration: 1,\n\t\topacity: 0,\n\t\tease: 'sine.inOut',\n\t}, '-=1');\n\n\ttlHorizontal.from('.contacts__items', {\n\t\tx: 450,\n\t\tduration: 1,\n\t\topacity: 0,\n\t\tease: 'sine.inOut',\n\t}, '-=1');\n}\n\n//* ----------------------------------------------------------------------------\nexport function tlServices1() {\n\n\tconst endValue = window.innerWidth >= 490 ? 'bottom bottom+=70' :\n\t\t'bottom bottom+=150';\n\tconst tlServices1 = gsap.timeline({\n\t\tscrollTrigger: {\n\t\t\ttrigger: '.offer-container__body',\n\t\t\tstart: 'top bottom-=50',\n\t\t\tendTrigger: '.offer-container__body',\n\t\t\t// end: 'bottom bottom+=70',\n\t\t\tend: endValue,\n\t\t\tscrub: 2,\n\t\t\ttoggleActions: 'play none none reverse',\n\t\t\t// markers: true,\n\t\t}\n\t});\n\ttlServices1.from('.sr-1', {\n\t\tx: -150,\n\t\tduration: 1,\n\t\topacity: 0,\n\t\tease: 'sine.inOut',\n\t});\n\ttlServices1.from('.sr-2', {\n\t\tx: 150,\n\t\tduration: 1,\n\t\topacity: 0,\n\t\tease: 'sine.inOut',\n\t}, '-=1');\n}\n\n//* ----------------------------------------------------------------------------\nexport function tlServices2() {\n\tconst endValue = window.innerWidth >= 490 ? 'bottom bottom+=70' :\n\t\t'bottom bottom+=150';\n\tconst tlServices2 = gsap.timeline({\n\t\tscrollTrigger: {\n\t\t\ttrigger: '.offer-container__body',\n\t\t\tstart: 'top bottom-=300',\n\t\t\tendTrigger: '.offer-container__body',\n\t\t\t// end: 'bottom bottom+=70',\n\t\t\tend: endValue,\n\t\t\tscrub: 2,\n\t\t\ttoggleActions: 'play none none reverse',\n\t\t\t// markers: true,\n\t\t}\n\t});\n\ttlServices2.from('.sr-3', {\n\t\tx: -150,\n\t\tduration: 1,\n\t\topacity: 0,\n\t\tease: 'sine.in',\n\t});\n\ttlServices2.from('.sr-4', {\n\t\tx: 150,\n\t\tduration: 1,\n\t\topacity: 0,\n\t\tease: 'sine.in',\n\t}, '-=1');\n}","import anime from 'animejs';\n\n// -----------------------------------------------------------------------------\nexport function timeLineHeaderItem() {\n\tlet timeline = anime.timeline({\n\t\tduration: 750,\n\t});\n\ttimeline\n\t\t.add({\n\t\t\ttargets: '.header__item',\n\t\t\topacity: [0, 1],\n\t\t\ttranslateY: [-100, 0],\n\t\t\tdelay: anime.stagger(100, { start: 100 }),\n\t\t\teasing: 'easeInOutSine',\n\t\t\tbegin: function (anim) {\n\t\t\t\tanim.animatables.forEach(function (animatable) {\n\t\t\t\t\tanimatable.target.style.transition = 'all 0.5s ease-out';\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.add({\n\t\t\ttargets: '.header__item',\n\t\t\tdelay: anime.stagger(100, { start: 500 }),\n\t\t\teasing: 'easeInOutSine',\n\t\t}, '-=250')\n\t\t.add({\n\t\t\ttargets: '.el-logo',\n\t\t\topacity: [0, 1],\n\t\t\ttranslateX: [-200, 0],\n\t\t\t// rotate: [-90, 0],\n\t\t\tduration: 1250,\n\t\t\teasing: 'easeInOutSine',\n\t\t\tbegin: function (anim) {\n\t\t\t\tanim.animatables.forEach(function (animatable) {\n\t\t\t\t\tanimatable.target.style.transition = 'opacity 0.5s ease-out';\n\t\t\t\t});\n\t\t\t}\n\t\t}, 50)\n\t\t.add({\n\t\t\ttargets: '.el-community',\n\t\t\topacity: [0, 1],\n\t\t\ttranslateX: [200, 0],\n\n\t\t\ttranslateY: [9, 9],\n\t\t\t// rotate: [-90, 0],\n\t\t\tduration: 1250,\n\t\t\teasing: 'easeInOutSine',\n\t\t\tbegin: function (anim) {\n\t\t\t\tanim.animatables.forEach(function (animatable) {\n\t\t\t\t\tanimatable.target.style.transition = 'opacity 0.5s ease-out';\n\t\t\t\t});\n\t\t\t}\n\t\t}, 50);\n\n}\n// -----------------------------------------------------------------------------\nexport function fadeInSlide() {\n\tlet fadeInSlide = anime.timeline({\n\t\tduration: 750,\n\t});\n\tfadeInSlide\n\t\t.add({\n\t\t\ttargets: '.swiper-slide-active .main-slide__title',\n\t\t\topacity: [0, 1],\n\t\t\ttranslateY: [80, 0],\n\t\t\tdelay: anime.stagger(100, { start: 500 }),\n\t\t\tduration: 1000,\n\t\t\teasing: 'easeInOutSine',\n\t\t\tbegin: function (anim) {\n\t\t\t\tanim.animatables.forEach(function (animatable) {\n\t\t\t\t\tanimatable.target.style.transition = 'opacity 0.3s ease-out';\n\t\t\t\t});\n\t\t\t}\n\t\t}, 50)\n\t\t.add({\n\t\t\ttargets: '.swiper-slide-active .main-slide__text',\n\t\t\topacity: [0, 1],\n\t\t\ttranslateY: [100, 0],\n\t\t\tdelay: anime.stagger(100, { start: 500 }),\n\t\t\tduration: 1000,\n\t\t\teasing: 'easeInOutSine',\n\t\t\tbegin: function (anim) {\n\t\t\t\tanim.animatables.forEach(function (animatable) {\n\t\t\t\t\tanimatable.target.style.transition = 'opacity 0.3s ease-out';\n\t\t\t\t});\n\t\t\t}\n\t\t}, 130);\n}\nexport function animationSvgLine(target, reverse) {\n\tconst path = target.querySelector('.services-slide .lines path');\n\t// Создаем переменную path\n\tanime({\n\t\ttargets: path,\n\t\tstrokeDashoffset: [anime.setDashoffset, 0],\n\t\teasing: 'easeInOutSine',\n\t\tduration: 500,\n\t\topacity: [0, 1],\n\t\tdelay: function (el, i) { return i * 250; },\n\t\tdirection: reverse ? 'reverse' : 'normal', // Устанавливаем направление анимации в зависимости от параметра reverse \n\t\tbegin: () => {\n\t\t\ttarget.classList.add('animating'); // Добавляем класс при начале анимации\n\t\t},\n\t\tcomplete: () => {\n\t\t\tif (reverse) {\n\t\t\t\ttarget.classList.remove('animating'); // Удаляем класс после завершения анимации в обратном направлении\n\t\t\t\tpath.setAttribute('stroke-dashoffset', anime.setDashoffset);\n\t\t\t}\n\t\t}\n\t});\n}\nexport function animationSvgText(target, reverse) {\n\tconst textPath = target.querySelectorAll('.services-slide__image .lines-text path');\n\t// Создаем переменную path\n\tanime({\n\t\ttargets: textPath,\n\t\tstrokeDashoffset: [0, anime.setDashoffset],\n\t\teasing: 'easeInOutSine',\n\t\tduration: 300,\n\t\topacity: 1,\n\t\tdelay: function (el, i) { return i * 200; },\n\t\tdirection: reverse ? 'reverse' : 'normal', // Устанавливаем направление анимации в зависимости от параметра reverse \n\t\tbegin: () => {\n\t\t\ttarget.classList.add('animating'); // Добавляем класс при начале анимации\n\t\t},\n\t\tcomplete: () => {\n\t\t\tif (reverse) {\n\t\t\t\ttarget.classList.remove('animating'); // Удаляем класс после завершения анимации в обратном направлении\n\t\t\t\ttextPath.forEach(path => {\n\t\t\t\t\tpath.setAttribute('stroke-dashoffset', anime.setDashoffset);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n}\nexport function removeElement() {\n\tconst animatedElements = document.querySelectorAll(\n\t\t'.equalizer-content__square');\n\tanimatedElements.forEach(element => {\n\t\tanime.remove(element); // Удаляем анимацию для каждого элемента\n\t});\n}\n\n\n\n\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { isWebpSupported } from 'react-image-webp/dist/utils/index.js';\nimport PropTypes from 'prop-types';\n//* ----------------------------------------------------------------------------\nexport const About = ({ baseUrl }) => {\n\tconst [isContentExpanded, setIsContentExpanded] = useState(\n\t\twindow.innerWidth > 920);\n\tconst toggleButtonRef = useRef(null);\n\tconst textBlockRef = useRef(null);\n\tconst hideBoxRef = useRef(null);\n\n\tconst handleToggleClick = useCallback(() => {\n\t\tsetIsContentExpanded(prevState => !prevState);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst toggleButton = toggleButtonRef.current;\n\n\t\tif (toggleButton) {\n\t\t\tif (!isContentExpanded) {\n\t\t\t\ttoggleButton.classList.add('hidden');\n\t\t\t} else {\n\t\t\t\ttoggleButton.classList.remove('hidden');\n\t\t\t}\n\t\t}\n\t}, [isContentExpanded]);\n\n\tuseEffect(() => {\n\t\tconst toggleButton = toggleButtonRef.current;\n\t\tconst textBlock = textBlockRef.current;\n\t\tconst hideBox = hideBoxRef.current;\n\n\t\tif (toggleButton) {\n\t\t\ttoggleButton.addEventListener('click', handleToggleClick);\n\t\t}\n\n\t\tif (textBlock && hideBox) {\n\t\t\tif (!isContentExpanded) {\n\t\t\t\ttextBlock.classList.remove('hidden');\n\t\t\t\thideBox.classList.remove('hidden');\n\t\t\t} else {\n\t\t\t\ttextBlock.classList.add('hidden');\n\t\t\t\thideBox.classList.add('hidden');\n\t\t\t}\n\t\t}\n\t}, [handleToggleClick, isContentExpanded]);\n\n\tconst handleResize = useCallback(() => {\n\t\tsetIsContentExpanded(window.innerWidth > 920);\n\t}, []);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', handleResize);\n\t\treturn () => window.removeEventListener('resize', handleResize);\n\t}, [handleResize]);\n\n\tconst getPath = (fileName) => {\n\t\treturn `${baseUrl}/${fileName}`;\n\t};\n\n\treturn (\n\t\t<div className=\"about\"\n\t\t\tid='about'>\n\t\t\t<div className=\"about__bg-image _ibg\">\n\t\t\t\t<picture>\n\t\t\t\t\t{isWebpSupported()\n\t\t\t\t\t\t? <img src={getPath('img/about/ab-img-01.webp')}\n\t\t\t\t\t\t\talt=\"image\"\n\t\t\t\t\t\t\ttype=\"image/webp\" />\n\t\t\t\t\t\t: <img src={getPath('img/about/ab-img-01.png')}\n\t\t\t\t\t\t\talt=\"image\" />}\n\t\t\t\t</picture>\n\t\t\t</div>\n\t\t\t<div className=\"about__container\">\n\t\t\t\t<div className=\"content-body about__content\">\n\t\t\t\t\t{/* <div className=\"content-body__column\"></div> */}\n\t\t\t\t\t<div className=\"content-body__column\">\n\t\t\t\t\t\t<div ref={textBlockRef}\n\t\t\t\t\t\t\tclassName=\"content-body__text\">\n\t\t\t\t\t\t\t<h1 className=\"content-body__title\">В нашей студии:</h1>\n\t\t\t\t\t\t\t<p>- описав свой проект, Вы получаете уникальные предложения от\n\t\t\t\t\t\t\t\tведущих профессионалов. Наймите именно того специалиста, который\n\t\t\t\t\t\t\t\tидеально подходит для воплощения вашей музыкальной идеи!\n\t\t\t\t\t\t\t\t<span ref={toggleButtonRef}\n\t\t\t\t\t\t\t\t\tclassName=\"content-body__icon\">\n\t\t\t\t\t\t\t\t\t<i className=\"content-body__ellipsis\"></i>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<div ref={hideBoxRef}\n\t\t\t\t\t\t\t\tclassName=\"content-body__hide-box\">\n\t\t\t\t\t\t\t\t<div className=\"content-body__wrapper\">\n\t\t\t\t\t\t\t\t\t<span>- мы понимаем, что талант без правильного оборудования\n\t\t\t\t\t\t\t\t\t\tможет оставаться скрытым. Именно поэтому мы предлагаем все\n\t\t\t\t\t\t\t\t\t\tнеобходимое для раскрытия вашего потенциала.\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span>- но наша студия - это не просто место для работы.\n\t\t\t\t\t\t\t\t\t\tЗдесь создается особое настроение, которое способствует\n\t\t\t\t\t\t\t\t\t\tвашему вдохновению. Дружеская атмосфера позволяет вам\n\t\t\t\t\t\t\t\t\t\tчувствовать себя комфортно и свободно, чтобы в полной\n\t\t\t\t\t\t\t\t\t\tмере насладиться процессом создания музыки.\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nAbout.propTypes = {\n\tbaseUrl: PropTypes.string.isRequired,\n};\n\n\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\n//* ----------------------------------------------------------------------------\n\n//* ----------------------------------------------------------------------------\nconst baseUrl = '..';\n//* ---------------------------- Components-------------------------------------\nimport { Header } from '../layouts/Header.jsx';\n// import { Achievements } from '../components/Achievements.jsx';\nimport { Footer } from '../layouts/Footer.jsx';\nimport { About } from '../components/About.jsx';\nimport { MenuFloat } from '../components/Menu-float.jsx';\n//* ---------------------------- About -----------------------------------------\n/**\n * Компонент Header.\n//  * @param {{ baseUrl: string }} props - Объект пропсов.\n */\n// const isRoot = window.location.pathname === '/' || window.location.pathname.match(/^\\/[^/]*$/);\n// const baseUrl = isRoot ? '.' : '..';\n// console.log(baseUrl);\n//* ---------------------------- Header ----------------------------------------\ncreateRoot(document.querySelector('.page__header')).render(\n\t<Header baseUrl={baseUrl} />);\n//* ------------------------------ About ---------------------------------------\ncreateRoot(document.querySelector('.main-content__about')).render(\n\t<About baseUrl={baseUrl} />);\n//* ----------------------------------------------------------------------------\n// createRoot(document.querySelector('.main-content__achievements')).render(\n// \t<Achievements/>);\n//* ------------------------------ Footer --------------------------------------\ncreateRoot(document.querySelector('.main-content__footer')).render(\n\t<Footer />);\n//* ------------------------------ Menufloat -----------------------------------\ncreateRoot(document.querySelector('.page__menu-float')).render(\n\t<MenuFloat baseUrl={baseUrl} />);\n//* ----------------------------------------------------------------------------","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-scroll';\nimport PropTypes from 'prop-types';\n// import { initSectionTriggerMove } from '../animations/animation-index.jsx';\n\n\n\nexport const MenuFloat = ({ baseUrl }) => {\n\tconst [offset, setOffset] = useState(-100);\n\tuseEffect(() => {\n\n\t\tfunction handleResize() {\n\t\t\tconst screenWidth = window.innerWidth;\n\t\t\t/* Настроить логику для установки различных значений offset в\n\t\t\t зависимости от ширины экрана */\n\t\t\tif (screenWidth < 920) {\n\t\t\t\tsetOffset(-80);\n\t\t\t} else {\n\t\t\t\tsetOffset(-100);\n\t\t\t}\n\t\t}\n\n\t\t/* Вызов функции handleResize сразу после монтирования компонента,\n\t\t\tчтобы установить начальное значение */\n\t\thandleResize();\n\n\t\t/* Убираем слушатель события изменения размера окна при\n\t\tразмонтировании компонента */\n\t\treturn () => window.removeEventListener('resize', handleResize);\n\t}, []);\n\tuseEffect(() => {\n\n\t\tdocument.querySelector('.burger-button').addEventListener(\n\t\t\t'click', function () {\n\t\t\t\tthis.classList.toggle('_active');\n\t\t\t\tconst menuFloatTop = document.querySelector('.menu-float__top');\n\t\t\t\tmenuFloatTop.classList.toggle('_is-open');\n\t\t\t});\n\t}, []);\n\n\tconst getPath = (filename) => {\n\t\treturn `${baseUrl}/${filename}`;\n\t};\n\n\treturn (\n\t\t<nav className=\"menu-float\">\n\t\t\t<div className=\"menu-float__body\">\n\t\t\t\t<div className=\"menu-float__inner\">\n\t\t\t\t\t<div className=\"menu-float__wrapper\">\n\t\t\t\t\t\t<div className=\"menu-float__top\">\n\t\t\t\t\t\t\t<div className=\"menu-float__top-content\">\n\t\t\t\t\t\t\t\t<div className=\"main-menu\">\n\t\t\t\t\t\t\t\t\t<div className=\"main-menu__menu-wrapper\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"main-menu__column\">\n\t\t\t\t\t\t\t\t\t\t\t<ul className=\"main-menu__menu-nav\">\n\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"main-menu__title\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>Inspiration</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"main-menu__menu-link\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"main-menu__menu-link\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"\">Видео</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"main-menu__menu-link\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"main-menu__menu-link\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"\">Звук</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"main-menu__menu-link\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"main-menu__menu-link\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"\">Текст</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"main-menu__menu-link\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"main-menu__menu-link\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"\">Ивенты</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"main-menu__menu-link\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"main-menu__menu-link\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"\">Услуги</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"main-menu__column\">\n\t\t\t\t\t\t\t\t\t\t\t<ul className=\"main-menu__menu-nav\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"main-menu__title\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>w.</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"main-menu__menu-link\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"main-menu__menu-link\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={getPath('pages/about.html')}>Биография</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"main-menu__menu-link\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"main-menu__menu-link\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"\">С кем работали</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"main-menu__menu-link\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"main-menu__menu-link\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"\">Отзывы клиентов</a>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"main-menu__menu-link\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"main-menu__menu-link\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"\">Галерея</a></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li className=\"main-menu__menu-link\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"main-menu__menu-link\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"\">Контакты</a></li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"menu-float__bottom\">\n\t\t\t\t\t\t\t<div className=\"menu-float__layout menu-float__layout--primary\">\n\t\t\t\t\t\t\t\t<div className=\"menu-float__content\">\n\t\t\t\t\t\t\t\t\t<a className=\"menu-float__mail\"\n\t\t\t\t\t\t\t\t\t\thref=\"tel:+79106044424\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"menu-float__logo\">\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"icon-phone-call\"></i></div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"menu-float__breadcrumb\">\n\t\t\t\t\t\t\t\t\t\t\t<strong className=\"menu-float__title\">G.студия</strong>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"menu-float__layout menu-float__layout--secondary\">\n\t\t\t\t\t\t\t\t<div className=\"menu-float__content\">\n\t\t\t\t\t\t\t\t\t<div className=\"menu-float__nav\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"menu-float__menu-link menu-float__menu-link--home\">\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"menu-float__link\" href={getPath('index.html')}>\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"icon-home\"></i>\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"menu-float__menu-link menu-float__menu-link--services\">\n\t\t\t\t\t\t\t\t\t\t\t<Link className=\"menu-float__link\"\n\t\t\t\t\t\t\t\t\t\t\t\tto='services'\n\t\t\t\t\t\t\t\t\t\t\t\tactiveClass=\"_active\"\n\t\t\t\t\t\t\t\t\t\t\t\tspy={true}\n\t\t\t\t\t\t\t\t\t\t\t\tsmooth='easeInQuad'\n\t\t\t\t\t\t\t\t\t\t\t\tignoreCancelEvents={false}\n\t\t\t\t\t\t\t\t\t\t\t\tduration={500}\n\t\t\t\t\t\t\t\t\t\t\t\toffset={offset}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Услуги</span>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"menu-float__menu-link menu-float__menu-link--footer\">\n\t\t\t\t\t\t\t\t\t\t\t<Link className='menu-float__link'\n\t\t\t\t\t\t\t\t\t\t\t\tto='footer'\n\t\t\t\t\t\t\t\t\t\t\t\tactiveClass=\"_active\"\n\t\t\t\t\t\t\t\t\t\t\t\tspy={true}\n\t\t\t\t\t\t\t\t\t\t\t\tduration={500}\n\t\t\t\t\t\t\t\t\t\t\t\tsmooth='easeInQuad'\n\t\t\t\t\t\t\t\t\t\t\t\toffset={offset}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Контакты</span>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"menu-float__layout menu-float__layout--button\">\n\t\t\t\t\t\t\t\t<div className=\"menu-float__content\">\n\t\t\t\t\t\t\t\t\t<div className=\"burger-button\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"burger-button__items\">\n\t\t\t\t\t\t\t\t\t\t\t<svg viewBox=\"10 6 44 36\">\n\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M19,15 L45,15 C70,15 58,-2 49.0177126,7 L19,37\"></path>\n\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M19,24 L45,24 C61.2371586,24 57,49 41,33 L32,24\"></path>\n\t\t\t\t\t\t\t\t\t\t\t\t<path d=\"M45,33 L19,33 C-8,33 6,-2 22,14 L45,37\"></path>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\nMenuFloat.propTypes = {\n\tbaseUrl: PropTypes.string.isRequired,\n};","/**\n * @remix-run/router v1.20.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial) {\n  if (allowPartial === void 0) {\n    allowPartial = false;\n  }\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass DataWithResponseInit {\n  constructor(data, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data;\n    this.init = init || null;\n  }\n}\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nfunction data(data, init) {\n  return new DataWithResponseInit(data, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\n      initialized = initialMatches.slice(0, idx + 1).every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = new Set();\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate = undefined;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (unblockBlockerHistoryUpdate) {\n        unblockBlockerHistoryUpdate();\n        unblockBlockerHistoryUpdate = undefined;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        let nextHistoryUpdatePromise = new Promise(resolve => {\n          unblockBlockerHistoryUpdate = resolve;\n        });\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked, after the url\n            // restoration is also complete.  See:\n            // https://github.com/remix-run/react-router/issues/11613\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      viewTransitionOpts: opts.viewTransitionOpts,\n      flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation,\n      // Proxy through any rending view transition\n      enableViewTransition: pendingViewTransitionEnabled === true\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: ResultType.error,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n      // Create a GET request for the loaders\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches: updatedMatches || matches\n    }, getActionDataForCommit(pendingActionResult), {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: ResultType.error,\n            error: discoverResult.error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", state, request, [actionMatch], matches, null);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(_extends({\n          navigation: loadingNavigation\n        }, actionData !== undefined ? {\n          actionData\n        } : {}), {\n          flushSync\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = _extends({}, state.errors, errors);\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      matches,\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, path, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", state, fetchRequest, [match], requestMatches, key);\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, path, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", state, fetchRequest, [match], matches, key);\n    let result = results[match.route.id];\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(request, redirect, isNavigation, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true || redirect.response.headers.has(\"X-Remix-Replace\") ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: location\n        }),\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    }\n  }\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, state, request, matchesToLoad, matches, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties);\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach(m => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, future.v7_relativeSplatPath)\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(state, matches, matchesToLoad, fetchersToLoad, request) {\n    let currentMatches = state.matches;\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\"loader\", state, request, matchesToLoad, matches, null);\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\n      if (f.matches && f.match && f.controller) {\n        let results = await callDataStrategy(\"loader\", state, createClientSideRequest(init.history, f.path, f.controller.signal), [f.match], f.matches, f.key);\n        let result = results[f.match.route.id];\n        // Fetcher results are keyed by fetcher key from here on out, not routeId\n        return {\n          [f.key]: result\n        };\n      } else {\n        return Promise.resolve({\n          [f.key]: {\n            type: ResultType.error,\n            error: getInternalRouterError(404, {\n              pathname: f.path\n            })\n          }\n        });\n      }\n    }));\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\n    await Promise.all([resolveNavigationDeferredResults(matches, loaderResults, request.signal, currentMatches, state.loaderData), resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad)]);\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal) {\n    if (!patchRoutesOnNavigationImpl) {\n      return {\n        type: \"success\",\n        matches\n      };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          path: pathname,\n          matches: partialMatches,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties);\n          }\n        });\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      // Avoid loops if the second pass results in the same partial matches\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties);\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext,\n      dataStrategy\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, dataStrategy);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null);\n    return _extends({}, context, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      }\n    }, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(dataStrategy || defaultDataStrategy, type, null, request, matchesToLoad, matches, null, manifest, mapRouteProperties, requestContext);\n    let dataResults = {};\n    await Promise.all(matches.map(async match => {\n      if (!(match.route.id in results)) {\n        return;\n      }\n      let result = results[match.route.id];\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        // Throw redirects and let the server handle them with an HTTP redirect\n        throw normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename, future.v7_relativeSplatPath);\n      }\n      if (isResponse(result.result) && isRouteRequest) {\n        // For SSR single-route requests, we want to hand Responses back\n        // directly without unwrapping\n        throw result;\n      }\n      dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n    }));\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary) {\n  if (includeBoundary === void 0) {\n    includeBoundary = false;\n  }\n  let index = matches.findIndex(m => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, Object.keys(state.errors)[0], true);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]);\n  }\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (initialHydration || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties) {\n  var _childrenToPatch;\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(route, \"No route found to patch children into: routeId = \" + routeId);\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(newRoute => !childrenToPatch.some(existingRoute => isSameRoute(newRoute, existingRoute)));\n  let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties, [routeId || \"_\", \"patch\", String(((_childrenToPatch = childrenToPatch) == null ? void 0 : _childrenToPatch.length) || \"0\")], manifest);\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  // Most optimal check is by id\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  // Second is by pathing differences\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children.every((aChild, i) => {\n    var _existingRoute$childr;\n    return (_existingRoute$childr = existingRoute.children) == null ? void 0 : _existingRoute$childr.some(bChild => isSameRoute(aChild, bChild));\n  });\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy(_ref4) {\n  let {\n    matches\n  } = _ref4;\n  let matchesToLoad = matches.filter(m => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\n  return results.reduce((acc, result, i) => Object.assign(acc, {\n    [matchesToLoad[i].route.id]: result\n  }), {});\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties, requestContext) {\n  let loadRouteDefinitionsPromises = matches.map(m => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties, manifest) : undefined);\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some(m => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve = async handlerOverride => {\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        shouldLoad = true;\n      }\n      return shouldLoad ? callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, requestContext) : Promise.resolve({\n        type: ResultType.data,\n        result: undefined\n      });\n    };\n    return _extends({}, match, {\n      shouldLoad,\n      resolve\n    });\n  });\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext\n  });\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n  return results;\n}\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== undefined ? [ctx] : []));\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\n        return {\n          type: \"data\",\n          result: val\n        };\n      } catch (e) {\n        return {\n          type: \"error\",\n          result: e\n        };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadRoutePromise]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            result: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return {\n      type: ResultType.error,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let {\n    result,\n    type\n  } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      var _result$init2;\n      if (result.data instanceof Error) {\n        var _result$init;\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status\n        };\n      }\n      // Convert thrown data() to ErrorResponse instances\n      result = new ErrorResponseImpl(((_result$init2 = result.init) == null ? void 0 : _result$init2.status) || 500, undefined, result.data);\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init3, _result$init4;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init3 = result.init) == null ? void 0 : _result$init3.status,\n      headers: ((_result$init4 = result.init) == null ? void 0 : _result$init4.headers) && new Headers(result.init.headers)\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    var _result$init5, _result$init6;\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: (_result$init5 = result.init) == null ? void 0 : _result$init5.status,\n      headers: (_result$init6 = result.init) != null && _result$init6.headers ? new Headers(result.init.headers) : undefined\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach(match => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\n  );\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach(rf => {\n    let {\n      key,\n      match,\n      controller\n    } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type,\n    message\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return {\n        key,\n        result\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\n}\nfunction isRedirectDataStrategyResultResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveNavigationDeferredResults(matches, results, signal, currentMatches, currentLoaderData) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then(result => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveFetcherDeferredResults(matches, results, revalidatingFetchers) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      routeId,\n      controller\n    } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(controller, \"Expected an AbortController for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, controller.signal, true).then(result => {\n        if (result) {\n          results[key] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, decodePath as UNSAFE_decodePath, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, data, defer, generatePath, getStaticContextFromError, getToPathname, isDataWithResponseInit, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, replace, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.27.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_decodePath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, replace, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, UNSAFE_decodePath(pathname)), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _future;\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else if ((_future = future) != null && _future.v7_partialHydration && parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState = dataRouterState) == null ? void 0 : _dataRouterState.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]) !== undefined);\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    future,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: _extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = \"_error\" in promise ? AwaitRenderStatus.error : \"_data\" in promise ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.hydrateFallbackElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","import React, { } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Members = ({ baseUrl }) => {\n\tconst getPath = (fileName) => {\n\t\treturn `${baseUrl}/${fileName}`;\n\t};\n\treturn (\n\t\t<div className=\"about\">\n\t\t\t<div className=\"about__column el-1\">\n\t\t\t\t<div className=\"about__body\">\n\t\t\t\t\t<div className=\"about__title\">КОМПАНИЯ</div>\n\t\t\t\t\t<div className=\"about__text\">\n\t\t\t\t\t\t<p>Наша медиа-группа представляет собой превосходную студию\n\t\t\t\t\t\t\tзвукозаписи и продюсерскую компанию. Мы специализируемся на\n\t\t\t\t\t\t\tсоздании текстов, продюсировании, звукозаписи и развитии талантов.\n\t\t\t\t\t\t\tГотовы к сотрудничеству с вами в любое время.</p>\n\t\t\t\t\t\t<p>Мы признаём и ценим значимость каждого проекта. Наше\n\t\t\t\t\t\t\tобязательство - обеспечить высочайшее качество звукозаписи,\n\t\t\t\t\t\t\tгибкость и терпение, необходимые для достижения вами высокого\n\t\t\t\t\t\t\tуровня в конкурентной среде современного рынка.</p>\n\t\t\t\t\t\t<p>В нашей студии вас ждёт дружелюбная и уютная атмосфера, создающая\n\t\t\t\t\t\t\tидеальное окружение для раскрытия вашего таланта и создания ваших\n\t\t\t\t\t\t\tлучших произведений.</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='about__footer'>\n\t\t\t\t\t<a className='about__button'\n\t\t\t\t\t\thref={'pages/about.html'}>читать всё</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"about__column el-2\">\n\t\t\t\t<div className='about__body'>\n\t\t\t\t\t<div className=\"about__title\">СЕРВИС</div>\n\t\t\t\t\t<div className=\"about__item-services\">\n\t\t\t\t\t\t<i className='icon-microphone'></i>\n\t\t\t\t\t\t<span>Мы предлагаем услуги аналоговой и цифровой записи, а также\n\t\t\t\t\t\t\tмикширования в широком спектре жанров.</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"about__item-services\">\n\t\t\t\t\t\t<i className='icon-fast-forward'></i>\n\t\t\t\t\t\t<span>Наша студия привлекает великолепным интерьером и оборудованными\n\t\t\t\t\t\t\tкомфортабельными помещениями, идеально подходящими для создания\n\t\t\t\t\t\t\tлучших произведений.</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"about__item-services\">\n\t\t\t\t\t\t<i className='icon-music'></i>\n\t\t\t\t\t\t<span>В нашей студии мы внедряем передовое оборудование и программное\n\t\t\t\t\t\t\tобеспечение для микширования, обеспечивая высочайшее качество\n\t\t\t\t\t\t\tзвучания ваших треков. Ваше творчество - наш приоритет.</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='about__footer'>\n\t\t\t\t\t<a className='about__button'\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\ttype='button'>читать всё</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"about__column el-3\">\n\t\t\t\t<div className='about__body'>\n\t\t\t\t\t<div className=\"about__title\">НАША КОМАНДА</div>\n\t\t\t\t\t<div className=\"team-mates about__team-items\">\n\t\t\t\t\t\t<ul className=\"team-mates__list\">\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<div className=\"team-mates__image\">\n\t\t\t\t\t\t\t\t\t<img src={getPath('./img/footer/team-1.png')}\n\t\t\t\t\t\t\t\t\t\talt=\"image\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<div className=\"team-mates__name\">\n\t\t\t\t\t\t\t\t\t<a href=\"#\">Георгий Дудунов</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"team-mates__text\">\n\t\t\t\t\t\t\t\t\t<p>Георгий - основатель студии и ведущий звукорежиссер.\n\t\t\t\t\t\t\t\t\t\tEngineer.</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<ul className=\"team-mates__list\">\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<div className=\"team-mates__image\">\n\t\t\t\t\t\t\t\t\t<img src={getPath('img/footer/team-2.png')}\n\t\t\t\t\t\t\t\t\t\talt=\"image\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<div className=\"team-mates__name\">\n\t\t\t\t\t\t\t\t\t<a href=\"#\">Ryan Gosling</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"team-mates__text\">\n\t\t\t\t\t\t\t\t\t<p>Райан - ассистент звукорежиссера в студии звукозаписи.</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<ul className=\"team-mates__list\">\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<div className=\"team-mates__image\">\n\t\t\t\t\t\t\t\t\t<img src={getPath('img/footer/team-3.png')}\n\t\t\t\t\t\t\t\t\t\talt=\"image\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<div className=\"team-mates__name\">\n\t\t\t\t\t\t\t\t\t<a href=\"#\">Ryan Gosling</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"team-mates__text\">\n\t\t\t\t\t\t\t\t\t<p>Райан - ассистент звукорежиссера в студии звукозаписи.</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<ul className=\"team-mates__list\">\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<div className=\"team-mates__image\">\n\t\t\t\t\t\t\t\t\t<img src={getPath('img/footer/team-4.png')}\n\t\t\t\t\t\t\t\t\t\talt=\"image\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<div className=\"team-mates__name\">\n\t\t\t\t\t\t\t\t\t<a href=\"#\">Маргарита Калан</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"team-mates__text\">\n\t\t\t\t\t\t\t\t\t<p>Adam is the studio’s founder and leading sound\n\t\t\t\t\t\t\t\t\t\tengineer.</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nMembers.propTypes = {\n\tbaseUrl: PropTypes.string.isRequired,\n};\n\n","import React, { useEffect } from 'react';\nimport { Element } from 'react-scroll';\nimport { useLocation } from 'react-router-dom';\nimport { tlFooterParallel, tlFooterHorizontal } from '../animations/animation-index.jsx';\nimport { Members } from '../components/Members.jsx';\nimport { initSectionTriggerMove } from '../animations/animation-index.jsx';\n// import PropTypes from 'prop-types';\n//* ----------------------------------------------------------------------------\n\n// console.log(baseUrl);\nexport const Footer = () => {\n\tconst location = useLocation();\n\tconst isRoot = location.pathname === '/' || location.pathname.endsWith('/');\n\tconst baseUrl = isRoot ? '.' : '..';\n\n\tuseEffect(() => {\n\t\tconst isMobile = /Mobi|Android/i.test(navigator.userAgent);\n\t\tif (!isMobile) {\n\t\t\ttlFooterParallel();\n\t\t}\n\t\ttlFooterHorizontal();\n\t\tinitSectionTriggerMove('#footer', '.link-key--contacts');\n\t});\n\treturn (\n\t\t<Element className='footer' name='contacts'>\n\t\t\t<div className=\"footer__content\">\n\t\t\t\t<div className=\"footer__info _container\">\n\t\t\t\t\t{/* <Members baseUrl={baseUrl} /> */}\n\t\t\t\t\t<Members baseUrl={baseUrl} />\n\t\t\t\t\t<div className=\"footer__help el-4\">\n\t\t\t\t\t\t<i className='icon-achievements'></i>\n\t\t\t\t\t\t<i className='icon-services'></i>\n\t\t\t\t\t\t<i className='icon-reviews'></i>\n\t\t\t\t\t\t<i className='icon-contacts'></i>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"contacts footer__contacts el-5\">\n\t\t\t\t\t<div className=\"contacts__container\">\n\t\t\t\t\t\t<div className=\"contacts__items\">\n\t\t\t\t\t\t\t<div className=\"contacts__item\">\n\t\t\t\t\t\t\t\t<i className='icon-location'></i>\n\t\t\t\t\t\t\t\t<div className='contacts__text'>\n\t\t\t\t\t\t\t\t\t<p>Россия, Калужская область, г. Обнинск,</p>\n\t\t\t\t\t\t\t\t\t<p>Проспект Ленина, 137, к. 4, подъезд 3, оф. 260</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"contacts__item\">\n\t\t\t\t\t\t\t\t<a href=\"tel:+79106044424\">\n\t\t\t\t\t\t\t\t\t<i className=\"icon-phone-call\"></i>\n\t\t\t\t\t\t\t\t\t<span>+7 910 604-44-24</span>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"contacts__item\">\n\t\t\t\t\t\t\t\t<a href=\"mailto:mailto:studio@obninsk-gusli.ru\">\n\t\t\t\t\t\t\t\t\t<i className=\"icon-enve-mail\"></i>\n\t\t\t\t\t\t\t\t\t<span>studio@obninsk-gusli.ru</span>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"footer__community _container\">\n\t\t\t\t<div className=\"community\">\n\t\t\t\t\t<div className=\"community__items\">\n\t\t\t\t\t\t<div className=\"community__title\">\n\t\t\t\t\t\t\t<span>Media-Studio GROUP ©  2024.</span>\n\t\t\t\t\t\t\t<a className='community__link'\n\t\t\t\t\t\t\t\thref=\"\">Privacy Policy.\n\t\t\t\t\t\t\t\t<i className='icon-angles-right-solid'></i>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"community__icons\">\n\t\t\t\t\t\t\t<div className=\"community__icon\">\n\t\t\t\t\t\t\t\t<a className=\"wa\"\n\t\t\t\t\t\t\t\t\ttitle=\"WhatsApp\"\n\t\t\t\t\t\t\t\t\ttarget=\"blank\"\n\t\t\t\t\t\t\t\t\thref=\"https://wa.me/79106044424\">\n\t\t\t\t\t\t\t\t\t<i className=\"icon-whatsapp\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"community__icon\">\n\t\t\t\t\t\t\t\t<a className=\"wa\"\n\t\t\t\t\t\t\t\t\ttitle=\"VK\"\n\t\t\t\t\t\t\t\t\ttarget=\"blank\"\n\t\t\t\t\t\t\t\t\thref=\"https://vk.com/studio_gusli\">\n\t\t\t\t\t\t\t\t\t<i className=\"icon-vk-brand\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"community__icon\">\n\t\t\t\t\t\t\t\t<a className=\"wa\"\n\t\t\t\t\t\t\t\t\ttitle=\"TG\"\n\t\t\t\t\t\t\t\t\ttarget=\"blank\"\n\t\t\t\t\t\t\t\t\thref=\"https://t.me/gusli_studio\">\n\t\t\t\t\t\t\t\t\t<i className=\"icon-telegram-fly\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"community__icon\">\n\t\t\t\t\t\t\t\t<a className=\"wa\"\n\t\t\t\t\t\t\t\t\ttitle=\"youtube\"\n\t\t\t\t\t\t\t\t\ttarget=\"blank\"\n\t\t\t\t\t\t\t\t\thref=\"https://youtube.com/@guslistudio6257?si=36fe20TYpLAJyB3m\">\n\t\t\t\t\t\t\t\t\t<i className=\"icon-youtube-logo\"></i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Element>\n\t);\n};\n\n// Footer.propTypes = {\n// \tbaseUrl: PropTypes.string.isRequired,\n// };","import React, { useEffect } from 'react';\nimport { timeLineHeaderItem } from '../animations/anime-js.jsx';\nimport { isWebpSupported } from 'react-image-webp/dist/utils/index.js';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-scroll';\n// import { initSectionTriggerMove } from '../animations/animation-index.jsx';\nexport const Header = ({ baseUrl }) => {\n\t//* Именованная функция для обработки скроллинга\n\tconst handleScroll = () => {\n\t\tconst header = document.querySelector('.header');\n\t\tconst mainContent = document.querySelector(\n\t\t\t'.page__main-content');\n\t\tconst mainContentTop = mainContent.getBoundingClientRect().top;\n\n\t\tif (mainContentTop < 0) {\n\t\t\theader.classList.add('with-border');\n\t\t} else {\n\t\t\theader.classList.add('without-border');\n\t\t\theader.classList.remove('with-border');\n\t\t}\n\n\t\tif (mainContentTop < 0) {\n\t\t\theader.classList.remove('without-border');\n\t\t}\n\t};\n\n\n\tuseEffect(() => {\n\t\ttimeLineHeaderItem();\n\t\twindow.addEventListener('scroll', handleScroll);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('scroll', handleScroll);\n\t\t};\n\t}, []);\n\t// const handleSetActive = (to) => {\n\t// \tconsole.log(`${to} Element is now active`);\n\t// };\n\tconst getPath = (fileName) => {\n\t\treturn `${baseUrl}/${fileName}`;\n\t};\n\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t<div className=\"header__container\">\n\t\t\t\t<div className=\"header__content\">\n\t\t\t\t\t<div className=\"header__column el-logo\">\n\t\t\t\t\t\t<a href={getPath('index.html')}>\n\t\t\t\t\t\t\t<div className=\"header__logo\">\n\t\t\t\t\t\t\t\t{isWebpSupported() ? (\n\t\t\t\t\t\t\t\t\t<img src={getPath('img/header/logo.webp')}\n\t\t\t\t\t\t\t\t\t\talt=\"Logo\"\n\t\t\t\t\t\t\t\t\t\ttype=\"image/webp\" />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<img src={getPath('.img/header/logo.png')}\n\t\t\t\t\t\t\t\t\t\talt=\"Logo\" />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<div className=\"header__text\">\n\t\t\t\t\t\t\t<span>Media-Group</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"header__column\">\n\t\t\t\t\t\t<div className=\"header__menu\">\n\t\t\t\t\t\t\t<a className=\"header__item header__item--home\"\n\t\t\t\t\t\t\t\thref={getPath('index.html')}>\n\t\t\t\t\t\t\t\t<i className=\"icon-home\"></i>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<div className=\"header__item\">\n\t\t\t\t\t\t\t\t<Link className=\"header__link-key link-key--services\"\n\t\t\t\t\t\t\t\t\tto=\"services\"\n\t\t\t\t\t\t\t\t\tduration={500}\n\t\t\t\t\t\t\t\t\toffset={-100}\n\t\t\t\t\t\t\t\t\tsmooth='easeInQuad'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span>Услуги</span>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"header__item\">\n\t\t\t\t\t\t\t\t<a className=\"header__link-key\" href={getPath('pages/videos.html')}>\n\t\t\t\t\t\t\t\t\t<span>Видео</span>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"header__item\">\n\t\t\t\t\t\t\t\t<a className=\"header__link-key\" href={getPath('pages/about.html')}>\n\t\t\t\t\t\t\t\t\t<span>Компания</span>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"header__item\">\n\t\t\t\t\t\t\t\t<a className=\"header__link-key\" href={getPath('')}>\n\t\t\t\t\t\t\t\t\t<span>Новости</span>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"header__item\">\n\t\t\t\t\t\t\t\t<Link className=\"header__link-key link-key--contacts\"\n\t\t\t\t\t\t\t\t\tto=\"contacts\"\n\t\t\t\t\t\t\t\t\tduration={500}\n\t\t\t\t\t\t\t\t\toffset={-100}\n\t\t\t\t\t\t\t\t\tisDynamic={true}\n\t\t\t\t\t\t\t\t\tsmooth='easeInQuad'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span>Контакты</span>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"header__bookmark\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"header__column el-community\">\n\t\t\t\t\t\t<a href=\"tel:++79106044424\"\n\t\t\t\t\t\t\tclassName=\"el-community__phone\">\n\t\t\t\t\t\t\t<i className=\"icon-phone-ringing\"></i>\n\t\t\t\t\t\t\t<div className=\"el-community__content\">\n\t\t\t\t\t\t\t\t<h5 className=\"el-community__title\">Связаться с нами</h5>\n\t\t\t\t\t\t\t\t<span>+7 910 604-44-24</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nHeader.propTypes = {\n\tbaseUrl: PropTypes.string.isRequired\n};\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var _typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&\"function\"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?\"symbol\":typeof a},support=void 0,isWebpSupported=exports.isWebpSupported=function(){if(\"undefined\"!=typeof support)return support;var a=\"object\"===(\"undefined\"==typeof document?\"undefined\":_typeof(document))?document.createElement(\"canvas\"):{};return support=0===a.toDataURL(\"image/webp\").indexOf(\"data:image/webp\"),support};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _scrollLink = require('../mixins/scroll-link');\n\nvar _scrollLink2 = _interopRequireDefault(_scrollLink);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ButtonElement = function (_React$Component) {\n  _inherits(ButtonElement, _React$Component);\n\n  function ButtonElement() {\n    _classCallCheck(this, ButtonElement);\n\n    return _possibleConstructorReturn(this, (ButtonElement.__proto__ || Object.getPrototypeOf(ButtonElement)).apply(this, arguments));\n  }\n\n  _createClass(ButtonElement, [{\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'button',\n        this.props,\n        this.props.children\n      );\n    }\n  }]);\n\n  return ButtonElement;\n}(_react2.default.Component);\n\n;\n\nexports.default = (0, _scrollLink2.default)(ButtonElement);","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _scrollElement = require('../mixins/scroll-element');\n\nvar _scrollElement2 = _interopRequireDefault(_scrollElement);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ElementWrapper = function (_React$Component) {\n  _inherits(ElementWrapper, _React$Component);\n\n  function ElementWrapper() {\n    _classCallCheck(this, ElementWrapper);\n\n    return _possibleConstructorReturn(this, (ElementWrapper.__proto__ || Object.getPrototypeOf(ElementWrapper)).apply(this, arguments));\n  }\n\n  _createClass(ElementWrapper, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      // Remove `parentBindings` and `name` from props\n      var newProps = _extends({}, this.props);\n      delete newProps.name;\n      if (newProps.parentBindings) {\n        delete newProps.parentBindings;\n      }\n\n      return _react2.default.createElement(\n        'div',\n        _extends({}, newProps, { ref: function ref(el) {\n            _this2.props.parentBindings.domNode = el;\n          } }),\n        this.props.children\n      );\n    }\n  }]);\n\n  return ElementWrapper;\n}(_react2.default.Component);\n\n;\n\nElementWrapper.propTypes = {\n  name: _propTypes2.default.string,\n  id: _propTypes2.default.string\n};\n\nexports.default = (0, _scrollElement2.default)(ElementWrapper);","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _scrollLink = require('../mixins/scroll-link');\n\nvar _scrollLink2 = _interopRequireDefault(_scrollLink);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LinkElement = function (_React$Component) {\n  _inherits(LinkElement, _React$Component);\n\n  function LinkElement() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, LinkElement);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = LinkElement.__proto__ || Object.getPrototypeOf(LinkElement)).call.apply(_ref, [this].concat(args))), _this), _this.render = function () {\n      return _react2.default.createElement(\n        'a',\n        _this.props,\n        _this.props.children\n      );\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  return LinkElement;\n}(_react2.default.Component);\n\n;\n\nexports.default = (0, _scrollLink2.default)(LinkElement);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Helpers = exports.ScrollElement = exports.ScrollLink = exports.animateScroll = exports.scrollSpy = exports.Events = exports.scroller = exports.Element = exports.Button = exports.Link = undefined;\n\nvar _Link = require('./components/Link.js');\n\nvar _Link2 = _interopRequireDefault(_Link);\n\nvar _Button = require('./components/Button.js');\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nvar _Element = require('./components/Element.js');\n\nvar _Element2 = _interopRequireDefault(_Element);\n\nvar _scroller = require('./mixins/scroller.js');\n\nvar _scroller2 = _interopRequireDefault(_scroller);\n\nvar _scrollEvents = require('./mixins/scroll-events.js');\n\nvar _scrollEvents2 = _interopRequireDefault(_scrollEvents);\n\nvar _scrollSpy = require('./mixins/scroll-spy.js');\n\nvar _scrollSpy2 = _interopRequireDefault(_scrollSpy);\n\nvar _animateScroll = require('./mixins/animate-scroll.js');\n\nvar _animateScroll2 = _interopRequireDefault(_animateScroll);\n\nvar _scrollLink = require('./mixins/scroll-link.js');\n\nvar _scrollLink2 = _interopRequireDefault(_scrollLink);\n\nvar _scrollElement = require('./mixins/scroll-element.js');\n\nvar _scrollElement2 = _interopRequireDefault(_scrollElement);\n\nvar _Helpers = require('./mixins/Helpers.js');\n\nvar _Helpers2 = _interopRequireDefault(_Helpers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Link = _Link2.default;\nexports.Button = _Button2.default;\nexports.Element = _Element2.default;\nexports.scroller = _scroller2.default;\nexports.Events = _scrollEvents2.default;\nexports.scrollSpy = _scrollSpy2.default;\nexports.animateScroll = _animateScroll2.default;\nexports.ScrollLink = _scrollLink2.default;\nexports.ScrollElement = _scrollElement2.default;\nexports.Helpers = _Helpers2.default;\nexports.default = { Link: _Link2.default, Button: _Button2.default, Element: _Element2.default, scroller: _scroller2.default, Events: _scrollEvents2.default, scrollSpy: _scrollSpy2.default, animateScroll: _animateScroll2.default, ScrollLink: _scrollLink2.default, ScrollElement: _scrollElement2.default, Helpers: _Helpers2.default };","\"use strict\";\n\n/* DEPRECATED */\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\n\nvar utils = require('./utils');\nvar scrollSpy = require('./scroll-spy');\nvar defaultScroller = require('./scroller');\nvar PropTypes = require('prop-types');\nvar scrollHash = require('./scroll-hash');\n\nvar protoTypes = {\n  to: PropTypes.string.isRequired,\n  containerId: PropTypes.string,\n  container: PropTypes.object,\n  activeClass: PropTypes.string,\n  spy: PropTypes.bool,\n  smooth: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  offset: PropTypes.number,\n  delay: PropTypes.number,\n  isDynamic: PropTypes.bool,\n  onClick: PropTypes.func,\n  duration: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  absolute: PropTypes.bool,\n  onSetActive: PropTypes.func,\n  onSetInactive: PropTypes.func,\n  ignoreCancelEvents: PropTypes.bool,\n  hashSpy: PropTypes.bool,\n  spyThrottle: PropTypes.number\n};\n\nvar Helpers = {\n  Scroll: function Scroll(Component, customScroller) {\n\n    console.warn(\"Helpers.Scroll is deprecated since v1.7.0\");\n\n    var scroller = customScroller || defaultScroller;\n\n    var Scroll = function (_React$Component) {\n      _inherits(Scroll, _React$Component);\n\n      function Scroll(props) {\n        _classCallCheck(this, Scroll);\n\n        var _this = _possibleConstructorReturn(this, (Scroll.__proto__ || Object.getPrototypeOf(Scroll)).call(this, props));\n\n        _initialiseProps.call(_this);\n\n        _this.state = {\n          active: false\n        };\n        return _this;\n      }\n\n      _createClass(Scroll, [{\n        key: 'getScrollSpyContainer',\n        value: function getScrollSpyContainer() {\n          var containerId = this.props.containerId;\n          var container = this.props.container;\n\n          if (containerId) {\n            return document.getElementById(containerId);\n          }\n\n          if (container && container.nodeType) {\n            return container;\n          }\n\n          return document;\n        }\n      }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n          if (this.props.spy || this.props.hashSpy) {\n            var scrollSpyContainer = this.getScrollSpyContainer();\n\n            if (!scrollSpy.isMounted(scrollSpyContainer)) {\n              scrollSpy.mount(scrollSpyContainer, this.props.spyThrottle);\n            }\n\n            if (this.props.hashSpy) {\n              if (!scrollHash.isMounted()) {\n                scrollHash.mount(scroller);\n              }\n              scrollHash.mapContainer(this.props.to, scrollSpyContainer);\n            }\n\n            if (this.props.spy) {\n              scrollSpy.addStateHandler(this.stateHandler);\n            }\n\n            scrollSpy.addSpyHandler(this.spyHandler, scrollSpyContainer);\n\n            this.setState({\n              container: scrollSpyContainer\n            });\n          }\n        }\n      }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n          scrollSpy.unmount(this.stateHandler, this.spyHandler);\n        }\n      }, {\n        key: 'render',\n        value: function render() {\n          var className = \"\";\n\n          if (this.state && this.state.active) {\n            className = ((this.props.className || \"\") + \" \" + (this.props.activeClass || \"active\")).trim();\n          } else {\n            className = this.props.className;\n          }\n\n          var props = _extends({}, this.props);\n\n          for (var prop in protoTypes) {\n            if (props.hasOwnProperty(prop)) {\n              delete props[prop];\n            }\n          }\n\n          props.className = className;\n          props.onClick = this.handleClick;\n\n          return React.createElement(Component, props);\n        }\n      }]);\n\n      return Scroll;\n    }(React.Component);\n\n    var _initialiseProps = function _initialiseProps() {\n      var _this2 = this;\n\n      this.scrollTo = function (to, props) {\n        scroller.scrollTo(to, _extends({}, _this2.state, props));\n      };\n\n      this.handleClick = function (event) {\n\n        /*\r\n         * give the posibility to override onClick\r\n         */\n\n        if (_this2.props.onClick) {\n          _this2.props.onClick(event);\n        }\n\n        /*\r\n         * dont bubble the navigation\r\n         */\n\n        if (event.stopPropagation) event.stopPropagation();\n        if (event.preventDefault) event.preventDefault();\n\n        /*\r\n         * do the magic!\r\n         */\n        _this2.scrollTo(_this2.props.to, _this2.props);\n      };\n\n      this.stateHandler = function () {\n        if (scroller.getActiveLink() !== _this2.props.to) {\n          if (_this2.state !== null && _this2.state.active && _this2.props.onSetInactive) {\n            _this2.props.onSetInactive();\n          }\n          _this2.setState({ active: false });\n        }\n      };\n\n      this.spyHandler = function (y) {\n\n        var scrollSpyContainer = _this2.getScrollSpyContainer();\n\n        if (scrollHash.isMounted() && !scrollHash.isInitialized()) {\n          return;\n        }\n\n        var to = _this2.props.to;\n        var element = null;\n        var elemTopBound = 0;\n        var elemBottomBound = 0;\n        var containerTop = 0;\n\n        if (scrollSpyContainer.getBoundingClientRect) {\n          var containerCords = scrollSpyContainer.getBoundingClientRect();\n          containerTop = containerCords.top;\n        }\n\n        if (!element || _this2.props.isDynamic) {\n          element = scroller.get(to);\n          if (!element) {\n            return;\n          }\n\n          var cords = element.getBoundingClientRect();\n          elemTopBound = cords.top - containerTop + y;\n          elemBottomBound = elemTopBound + cords.height;\n        }\n\n        var offsetY = y - _this2.props.offset;\n        var isInside = offsetY >= Math.floor(elemTopBound) && offsetY < Math.floor(elemBottomBound);\n        var isOutside = offsetY < Math.floor(elemTopBound) || offsetY >= Math.floor(elemBottomBound);\n        var activeLink = scroller.getActiveLink();\n\n        if (isOutside) {\n          if (to === activeLink) {\n            scroller.setActiveLink(void 0);\n          }\n\n          if (_this2.props.hashSpy && scrollHash.getHash() === to) {\n            scrollHash.changeHash();\n          }\n\n          if (_this2.props.spy && _this2.state.active) {\n            _this2.setState({ active: false });\n            _this2.props.onSetInactive && _this2.props.onSetInactive();\n          }\n\n          return scrollSpy.updateStates();\n        }\n\n        if (isInside && activeLink !== to) {\n          scroller.setActiveLink(to);\n\n          _this2.props.hashSpy && scrollHash.changeHash(to);\n\n          if (_this2.props.spy) {\n            _this2.setState({ active: true });\n            _this2.props.onSetActive && _this2.props.onSetActive(to);\n          }\n          return scrollSpy.updateStates();\n        }\n      };\n    };\n\n    ;\n\n    Scroll.propTypes = protoTypes;\n\n    Scroll.defaultProps = { offset: 0 };\n\n    return Scroll;\n  },\n  Element: function Element(Component) {\n\n    console.warn(\"Helpers.Element is deprecated since v1.7.0\");\n\n    var Element = function (_React$Component2) {\n      _inherits(Element, _React$Component2);\n\n      function Element(props) {\n        _classCallCheck(this, Element);\n\n        var _this3 = _possibleConstructorReturn(this, (Element.__proto__ || Object.getPrototypeOf(Element)).call(this, props));\n\n        _this3.childBindings = {\n          domNode: null\n        };\n        return _this3;\n      }\n\n      _createClass(Element, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n          if (typeof window === 'undefined') {\n            return false;\n          }\n          this.registerElems(this.props.name);\n        }\n      }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n          if (this.props.name !== prevProps.name) {\n            this.registerElems(this.props.name);\n          }\n        }\n      }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n          if (typeof window === 'undefined') {\n            return false;\n          }\n          defaultScroller.unregister(this.props.name);\n        }\n      }, {\n        key: 'registerElems',\n        value: function registerElems(name) {\n          defaultScroller.register(name, this.childBindings.domNode);\n        }\n      }, {\n        key: 'render',\n        value: function render() {\n          return React.createElement(Component, _extends({}, this.props, { parentBindings: this.childBindings }));\n        }\n      }]);\n\n      return Element;\n    }(React.Component);\n\n    ;\n\n    Element.propTypes = {\n      name: PropTypes.string,\n      id: PropTypes.string\n    };\n\n    return Element;\n  }\n};\n\nmodule.exports = Helpers;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _smooth = require('./smooth');\n\nvar _smooth2 = _interopRequireDefault(_smooth);\n\nvar _cancelEvents = require('./cancel-events');\n\nvar _cancelEvents2 = _interopRequireDefault(_cancelEvents);\n\nvar _scrollEvents = require('./scroll-events');\n\nvar _scrollEvents2 = _interopRequireDefault(_scrollEvents);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\r\n * Gets the easing type from the smooth prop within options.\r\n */\nvar getAnimationType = function getAnimationType(options) {\n  return _smooth2.default[options.smooth] || _smooth2.default.defaultEasing;\n};\n/*\r\n * Function helper\r\n */\nvar functionWrapper = function functionWrapper(value) {\n  return typeof value === 'function' ? value : function () {\n    return value;\n  };\n};\n/*\r\n * Wraps window properties to allow server side rendering\r\n */\nvar currentWindowProperties = function currentWindowProperties() {\n  if (typeof window !== 'undefined') {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame;\n  }\n};\n\n/*\r\n * Helper function to never extend 60fps on the webpage.\r\n */\nvar requestAnimationFrameHelper = function () {\n  return currentWindowProperties() || function (callback, element, delay) {\n    window.setTimeout(callback, delay || 1000 / 60, new Date().getTime());\n  };\n}();\n\nvar makeData = function makeData() {\n  return {\n    currentPosition: 0,\n    startPosition: 0,\n    targetPosition: 0,\n    progress: 0,\n    duration: 0,\n    cancel: false,\n\n    target: null,\n    containerElement: null,\n    to: null,\n    start: null,\n    delta: null,\n    percent: null,\n    delayTimeout: null\n  };\n};\n\nvar currentPositionX = function currentPositionX(options) {\n  var containerElement = options.data.containerElement;\n  if (containerElement && containerElement !== document && containerElement !== document.body) {\n    return containerElement.scrollLeft;\n  } else {\n    var supportPageOffset = window.pageXOffset !== undefined;\n    var isCSS1Compat = (document.compatMode || \"\") === \"CSS1Compat\";\n    return supportPageOffset ? window.pageXOffset : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft;\n  }\n};\n\nvar currentPositionY = function currentPositionY(options) {\n  var containerElement = options.data.containerElement;\n  if (containerElement && containerElement !== document && containerElement !== document.body) {\n    return containerElement.scrollTop;\n  } else {\n    var supportPageOffset = window.pageXOffset !== undefined;\n    var isCSS1Compat = (document.compatMode || \"\") === \"CSS1Compat\";\n    return supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop;\n  }\n};\n\nvar scrollContainerWidth = function scrollContainerWidth(options) {\n  var containerElement = options.data.containerElement;\n  if (containerElement && containerElement !== document && containerElement !== document.body) {\n    return containerElement.scrollWidth - containerElement.offsetWidth;\n  } else {\n    var body = document.body;\n    var html = document.documentElement;\n\n    return Math.max(body.scrollWidth, body.offsetWidth, html.clientWidth, html.scrollWidth, html.offsetWidth);\n  }\n};\n\nvar scrollContainerHeight = function scrollContainerHeight(options) {\n  var containerElement = options.data.containerElement;\n  if (containerElement && containerElement !== document && containerElement !== document.body) {\n    return containerElement.scrollHeight - containerElement.offsetHeight;\n  } else {\n    var body = document.body;\n    var html = document.documentElement;\n\n    return Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n  }\n};\n\nvar animateScroll = function animateScroll(easing, options, timestamp) {\n  var data = options.data;\n\n  // Cancel on specific events\n  if (!options.ignoreCancelEvents && data.cancel) {\n    if (_scrollEvents2.default.registered['end']) {\n      _scrollEvents2.default.registered['end'](data.to, data.target, data.currentPositionY);\n    }\n    return;\n  };\n\n  data.delta = Math.round(data.targetPosition - data.startPosition);\n\n  if (data.start === null) {\n    data.start = timestamp;\n  }\n\n  data.progress = timestamp - data.start;\n\n  data.percent = data.progress >= data.duration ? 1 : easing(data.progress / data.duration);\n\n  data.currentPosition = data.startPosition + Math.ceil(data.delta * data.percent);\n\n  if (data.containerElement && data.containerElement !== document && data.containerElement !== document.body) {\n    if (options.horizontal) {\n      data.containerElement.scrollLeft = data.currentPosition;\n    } else {\n      data.containerElement.scrollTop = data.currentPosition;\n    }\n  } else {\n    if (options.horizontal) {\n      window.scrollTo(data.currentPosition, 0);\n    } else {\n      window.scrollTo(0, data.currentPosition);\n    }\n  }\n\n  if (data.percent < 1) {\n    var easedAnimate = animateScroll.bind(null, easing, options);\n    requestAnimationFrameHelper.call(window, easedAnimate);\n    return;\n  }\n\n  if (_scrollEvents2.default.registered['end']) {\n    _scrollEvents2.default.registered['end'](data.to, data.target, data.currentPosition);\n  }\n};\n\nvar setContainer = function setContainer(options) {\n  options.data.containerElement = !options ? null : options.containerId ? document.getElementById(options.containerId) : options.container && options.container.nodeType ? options.container : document;\n};\n\nvar animateTopScroll = function animateTopScroll(scrollOffset, options, to, target) {\n  options.data = options.data || makeData();\n\n  window.clearTimeout(options.data.delayTimeout);\n\n  var setCancel = function setCancel() {\n    options.data.cancel = true;\n  };\n  _cancelEvents2.default.subscribe(setCancel);\n\n  setContainer(options);\n\n  options.data.start = null;\n  options.data.cancel = false;\n  options.data.startPosition = options.horizontal ? currentPositionX(options) : currentPositionY(options);\n  options.data.targetPosition = options.absolute ? scrollOffset : scrollOffset + options.data.startPosition;\n\n  if (options.data.startPosition === options.data.targetPosition) {\n    if (_scrollEvents2.default.registered['end']) {\n      _scrollEvents2.default.registered['end'](options.data.to, options.data.target, options.data.currentPosition);\n    }\n    return;\n  }\n\n  options.data.delta = Math.round(options.data.targetPosition - options.data.startPosition);\n\n  options.data.duration = functionWrapper(options.duration)(options.data.delta);\n  options.data.duration = isNaN(parseFloat(options.data.duration)) ? 1000 : parseFloat(options.data.duration);\n  options.data.to = to;\n  options.data.target = target;\n\n  var easing = getAnimationType(options);\n  var easedAnimate = animateScroll.bind(null, easing, options);\n\n  if (options && options.delay > 0) {\n    options.data.delayTimeout = window.setTimeout(function () {\n      if (_scrollEvents2.default.registered['begin']) {\n        _scrollEvents2.default.registered['begin'](options.data.to, options.data.target);\n      }\n      requestAnimationFrameHelper.call(window, easedAnimate);\n    }, options.delay);\n    return;\n  }\n\n  if (_scrollEvents2.default.registered['begin']) {\n    _scrollEvents2.default.registered['begin'](options.data.to, options.data.target);\n  }\n  requestAnimationFrameHelper.call(window, easedAnimate);\n};\n\nvar proceedOptions = function proceedOptions(options) {\n  options = _extends({}, options);\n  options.data = options.data || makeData();\n  options.absolute = true;\n  return options;\n};\n\nvar scrollToTop = function scrollToTop(options) {\n  animateTopScroll(0, proceedOptions(options));\n};\n\nvar scrollTo = function scrollTo(toPosition, options) {\n  animateTopScroll(toPosition, proceedOptions(options));\n};\n\nvar scrollToBottom = function scrollToBottom(options) {\n  options = proceedOptions(options);\n  setContainer(options);\n  animateTopScroll(options.horizontal ? scrollContainerWidth(options) : scrollContainerHeight(options), options);\n};\n\nvar scrollMore = function scrollMore(toPosition, options) {\n  options = proceedOptions(options);\n  setContainer(options);\n  var currentPosition = options.horizontal ? currentPositionX(options) : currentPositionY(options);\n  animateTopScroll(toPosition + currentPosition, options);\n};\n\nexports.default = {\n  animateTopScroll: animateTopScroll,\n  getAnimationType: getAnimationType,\n  scrollToTop: scrollToTop,\n  scrollToBottom: scrollToBottom,\n  scrollTo: scrollTo,\n  scrollMore: scrollMore\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _passiveEventListeners = require('./passive-event-listeners');\n\nvar events = ['mousedown', 'mousewheel', 'touchmove', 'keydown'];\n\nexports.default = {\n  subscribe: function subscribe(cancelEvent) {\n    return typeof document !== 'undefined' && events.forEach(function (event) {\n      return (0, _passiveEventListeners.addPassiveEventListener)(document, event, cancelEvent);\n    });\n  }\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\r\n * Tell the browser that the event listener won't prevent a scroll.\r\n * Allowing the browser to continue scrolling without having to\r\n * to wait for the listener to return.\r\n */\nvar addPassiveEventListener = exports.addPassiveEventListener = function addPassiveEventListener(target, eventName, listener) {\n  var listenerName = listener.name;\n  if (!listenerName) {\n    listenerName = eventName;\n    console.warn('Listener must be a named function.');\n  }\n\n  if (!attachedListeners.has(eventName)) attachedListeners.set(eventName, new Set());\n  var listeners = attachedListeners.get(eventName);\n  if (listeners.has(listenerName)) return;\n\n  var supportsPassiveOption = function () {\n    var supportsPassiveOption = false;\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          supportsPassiveOption = true;\n        }\n      });\n      window.addEventListener('test', null, opts);\n    } catch (e) {}\n    return supportsPassiveOption;\n  }();\n  target.addEventListener(eventName, listener, supportsPassiveOption ? { passive: true } : false);\n  listeners.add(listenerName);\n};\n\nvar removePassiveEventListener = exports.removePassiveEventListener = function removePassiveEventListener(target, eventName, listener) {\n  target.removeEventListener(eventName, listener);\n  attachedListeners.get(eventName).delete(listener.name || eventName);\n};\n\nvar attachedListeners = new Map();","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _scroller = require('./scroller');\n\nvar _scroller2 = _interopRequireDefault(_scroller);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nexports.default = function (Component) {\n  var Element = function (_React$Component) {\n    _inherits(Element, _React$Component);\n\n    function Element(props) {\n      _classCallCheck(this, Element);\n\n      var _this = _possibleConstructorReturn(this, (Element.__proto__ || Object.getPrototypeOf(Element)).call(this, props));\n\n      _this.childBindings = {\n        domNode: null\n      };\n      return _this;\n    }\n\n    _createClass(Element, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        if (typeof window === 'undefined') {\n          return false;\n        }\n        this.registerElems(this.props.name);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate(prevProps) {\n        if (this.props.name !== prevProps.name) {\n          this.registerElems(this.props.name);\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        if (typeof window === 'undefined') {\n          return false;\n        }\n        _scroller2.default.unregister(this.props.name);\n      }\n    }, {\n      key: 'registerElems',\n      value: function registerElems(name) {\n        _scroller2.default.register(name, this.childBindings.domNode);\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        return _react2.default.createElement(Component, _extends({}, this.props, { parentBindings: this.childBindings }));\n      }\n    }]);\n\n    return Element;\n  }(_react2.default.Component);\n\n  ;\n\n  Element.propTypes = {\n    name: _propTypes2.default.string,\n    id: _propTypes2.default.string\n  };\n\n  return Element;\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar Events = {\n\tregistered: {},\n\tscrollEvent: {\n\t\tregister: function register(evtName, callback) {\n\t\t\tEvents.registered[evtName] = callback;\n\t\t},\n\t\tremove: function remove(evtName) {\n\t\t\tEvents.registered[evtName] = null;\n\t\t}\n\t}\n};\n\nexports.default = Events;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _passiveEventListeners = require('./passive-event-listeners');\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar scrollHash = {\n  mountFlag: false,\n  initialized: false,\n  scroller: null,\n  containers: {},\n\n  mount: function mount(scroller) {\n    this.scroller = scroller;\n\n    this.handleHashChange = this.handleHashChange.bind(this);\n    window.addEventListener('hashchange', this.handleHashChange);\n\n    this.initStateFromHash();\n    this.mountFlag = true;\n  },\n  mapContainer: function mapContainer(to, container) {\n    this.containers[to] = container;\n  },\n  isMounted: function isMounted() {\n    return this.mountFlag;\n  },\n  isInitialized: function isInitialized() {\n    return this.initialized;\n  },\n  initStateFromHash: function initStateFromHash() {\n    var _this = this;\n\n    var hash = this.getHash();\n    if (hash) {\n      window.setTimeout(function () {\n        _this.scrollTo(hash, true);\n        _this.initialized = true;\n      }, 10);\n    } else {\n      this.initialized = true;\n    }\n  },\n  scrollTo: function scrollTo(to, isInit) {\n    var scroller = this.scroller;\n    var element = scroller.get(to);\n    if (element && (isInit || to !== scroller.getActiveLink())) {\n      var container = this.containers[to] || document;\n      scroller.scrollTo(to, { container: container });\n    }\n  },\n  getHash: function getHash() {\n    return _utils2.default.getHash();\n  },\n  changeHash: function changeHash(to, saveHashHistory) {\n    if (this.isInitialized() && _utils2.default.getHash() !== to) {\n      _utils2.default.updateHash(to, saveHashHistory);\n    }\n  },\n  handleHashChange: function handleHashChange() {\n    this.scrollTo(this.getHash());\n  },\n  unmount: function unmount() {\n    this.scroller = null;\n    this.containers = null;\n    window.removeEventListener('hashchange', this.handleHashChange);\n  }\n};\n\nexports.default = scrollHash;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _scrollSpy = require('./scroll-spy');\n\nvar _scrollSpy2 = _interopRequireDefault(_scrollSpy);\n\nvar _scroller = require('./scroller');\n\nvar _scroller2 = _interopRequireDefault(_scroller);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _scrollHash = require('./scroll-hash');\n\nvar _scrollHash2 = _interopRequireDefault(_scrollHash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar protoTypes = {\n  to: _propTypes2.default.string.isRequired,\n  containerId: _propTypes2.default.string,\n  container: _propTypes2.default.object,\n  activeClass: _propTypes2.default.string,\n  activeStyle: _propTypes2.default.object,\n  spy: _propTypes2.default.bool,\n  horizontal: _propTypes2.default.bool,\n  smooth: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.string]),\n  offset: _propTypes2.default.number,\n  delay: _propTypes2.default.number,\n  isDynamic: _propTypes2.default.bool,\n  onClick: _propTypes2.default.func,\n  duration: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func]),\n  absolute: _propTypes2.default.bool,\n  onSetActive: _propTypes2.default.func,\n  onSetInactive: _propTypes2.default.func,\n  ignoreCancelEvents: _propTypes2.default.bool,\n  hashSpy: _propTypes2.default.bool,\n  saveHashHistory: _propTypes2.default.bool,\n  spyThrottle: _propTypes2.default.number\n};\n\nexports.default = function (Component, customScroller) {\n\n  var scroller = customScroller || _scroller2.default;\n\n  var Link = function (_React$PureComponent) {\n    _inherits(Link, _React$PureComponent);\n\n    function Link(props) {\n      _classCallCheck(this, Link);\n\n      var _this = _possibleConstructorReturn(this, (Link.__proto__ || Object.getPrototypeOf(Link)).call(this, props));\n\n      _initialiseProps.call(_this);\n\n      _this.state = {\n        active: false\n      };\n      return _this;\n    }\n\n    _createClass(Link, [{\n      key: 'getScrollSpyContainer',\n      value: function getScrollSpyContainer() {\n        var containerId = this.props.containerId;\n        var container = this.props.container;\n\n        if (containerId && !container) {\n          return document.getElementById(containerId);\n        }\n\n        if (container && container.nodeType) {\n          return container;\n        }\n\n        return document;\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        if (this.props.spy || this.props.hashSpy) {\n          var scrollSpyContainer = this.getScrollSpyContainer();\n\n          if (!_scrollSpy2.default.isMounted(scrollSpyContainer)) {\n            _scrollSpy2.default.mount(scrollSpyContainer, this.props.spyThrottle);\n          }\n\n          if (this.props.hashSpy) {\n            if (!_scrollHash2.default.isMounted()) {\n              _scrollHash2.default.mount(scroller);\n            }\n            _scrollHash2.default.mapContainer(this.props.to, scrollSpyContainer);\n          }\n\n          _scrollSpy2.default.addSpyHandler(this.spyHandler, scrollSpyContainer);\n\n          this.setState({\n            container: scrollSpyContainer\n          });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        _scrollSpy2.default.unmount(this.stateHandler, this.spyHandler);\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var className = \"\";\n\n        if (this.state && this.state.active) {\n          className = ((this.props.className || \"\") + \" \" + (this.props.activeClass || \"active\")).trim();\n        } else {\n          className = this.props.className;\n        }\n\n        var style = {};\n\n        if (this.state && this.state.active) {\n          style = _extends({}, this.props.style, this.props.activeStyle);\n        } else {\n          style = _extends({}, this.props.style);\n        }\n\n        var props = _extends({}, this.props);\n\n        for (var prop in protoTypes) {\n          if (props.hasOwnProperty(prop)) {\n            delete props[prop];\n          }\n        }\n\n        props.className = className;\n        props.style = style;\n        props.onClick = this.handleClick;\n\n        return _react2.default.createElement(Component, props);\n      }\n    }]);\n\n    return Link;\n  }(_react2.default.PureComponent);\n\n  var _initialiseProps = function _initialiseProps() {\n    var _this2 = this;\n\n    this.scrollTo = function (to, props) {\n      scroller.scrollTo(to, _extends({}, _this2.state, props));\n    };\n\n    this.handleClick = function (event) {\n\n      /*\r\n       * give the posibility to override onClick\r\n       */\n\n      if (_this2.props.onClick) {\n        _this2.props.onClick(event);\n      }\n\n      /*\r\n       * dont bubble the navigation\r\n       */\n\n      if (event.stopPropagation) event.stopPropagation();\n      if (event.preventDefault) event.preventDefault();\n\n      /*\r\n       * do the magic!\r\n       */\n      _this2.scrollTo(_this2.props.to, _this2.props);\n    };\n\n    this.spyHandler = function (x, y) {\n      var scrollSpyContainer = _this2.getScrollSpyContainer();\n\n      if (_scrollHash2.default.isMounted() && !_scrollHash2.default.isInitialized()) {\n        return;\n      }\n\n      var horizontal = _this2.props.horizontal;\n\n      var to = _this2.props.to;\n      var element = null;\n      var isInside = void 0;\n      var isOutside = void 0;\n\n      if (horizontal) {\n        var elemLeftBound = 0;\n        var elemRightBound = 0;\n        var containerLeft = 0;\n\n        if (scrollSpyContainer.getBoundingClientRect) {\n          var containerCords = scrollSpyContainer.getBoundingClientRect();\n          containerLeft = containerCords.left;\n        }\n\n        if (!element || _this2.props.isDynamic) {\n          element = scroller.get(to);\n          if (!element) {\n            return;\n          }\n\n          var cords = element.getBoundingClientRect();\n          elemLeftBound = cords.left - containerLeft + x;\n          elemRightBound = elemLeftBound + cords.width;\n        }\n\n        var offsetX = x - _this2.props.offset;\n        isInside = offsetX >= Math.floor(elemLeftBound) && offsetX < Math.floor(elemRightBound);\n        isOutside = offsetX < Math.floor(elemLeftBound) || offsetX >= Math.floor(elemRightBound);\n      } else {\n        var elemTopBound = 0;\n        var elemBottomBound = 0;\n        var containerTop = 0;\n\n        if (scrollSpyContainer.getBoundingClientRect) {\n          var _containerCords = scrollSpyContainer.getBoundingClientRect();\n          containerTop = _containerCords.top;\n        }\n\n        if (!element || _this2.props.isDynamic) {\n          element = scroller.get(to);\n          if (!element) {\n            return;\n          }\n\n          var _cords = element.getBoundingClientRect();\n          elemTopBound = _cords.top - containerTop + y;\n          elemBottomBound = elemTopBound + _cords.height;\n        }\n\n        var offsetY = y - _this2.props.offset;\n        isInside = offsetY >= Math.floor(elemTopBound) && offsetY < Math.floor(elemBottomBound);\n        isOutside = offsetY < Math.floor(elemTopBound) || offsetY >= Math.floor(elemBottomBound);\n      }\n\n      var activeLink = scroller.getActiveLink();\n\n      if (isOutside) {\n        if (to === activeLink) {\n          scroller.setActiveLink(void 0);\n        }\n\n        if (_this2.props.hashSpy && _scrollHash2.default.getHash() === to) {\n          var _props$saveHashHistor = _this2.props.saveHashHistory,\n              saveHashHistory = _props$saveHashHistor === undefined ? false : _props$saveHashHistor;\n\n          _scrollHash2.default.changeHash(\"\", saveHashHistory);\n        }\n\n        if (_this2.props.spy && _this2.state.active) {\n          _this2.setState({ active: false });\n          _this2.props.onSetInactive && _this2.props.onSetInactive(to, element);\n        }\n      }\n\n      if (isInside && (activeLink !== to || _this2.state.active === false)) {\n        scroller.setActiveLink(to);\n\n        var _props$saveHashHistor2 = _this2.props.saveHashHistory,\n            _saveHashHistory = _props$saveHashHistor2 === undefined ? false : _props$saveHashHistor2;\n\n        _this2.props.hashSpy && _scrollHash2.default.changeHash(to, _saveHashHistory);\n\n        if (_this2.props.spy) {\n          _this2.setState({ active: true });\n          _this2.props.onSetActive && _this2.props.onSetActive(to, element);\n        }\n      }\n    };\n  };\n\n  ;\n\n  Link.propTypes = protoTypes;\n\n  Link.defaultProps = { offset: 0 };\n\n  return Link;\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash.throttle');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _passiveEventListeners = require('./passive-event-listeners');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// The eventHandler will execute at a rate of 15fps by default\nvar eventThrottler = function eventThrottler(eventHandler) {\n  var throttleAmount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 66;\n  return (0, _lodash2.default)(eventHandler, throttleAmount);\n};\n\nvar scrollSpy = {\n\n  spyCallbacks: [],\n  spySetState: [],\n  scrollSpyContainers: [],\n\n  mount: function mount(scrollSpyContainer, throttle) {\n    if (scrollSpyContainer) {\n      var eventHandler = eventThrottler(function (event) {\n        scrollSpy.scrollHandler(scrollSpyContainer);\n      }, throttle);\n      scrollSpy.scrollSpyContainers.push(scrollSpyContainer);\n      (0, _passiveEventListeners.addPassiveEventListener)(scrollSpyContainer, 'scroll', eventHandler);\n    }\n  },\n  isMounted: function isMounted(scrollSpyContainer) {\n    return scrollSpy.scrollSpyContainers.indexOf(scrollSpyContainer) !== -1;\n  },\n  currentPositionX: function currentPositionX(scrollSpyContainer) {\n    if (scrollSpyContainer === document) {\n      var supportPageOffset = window.pageYOffset !== undefined;\n      var isCSS1Compat = (document.compatMode || \"\") === \"CSS1Compat\";\n      return supportPageOffset ? window.pageXOffset : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft;\n    } else {\n      return scrollSpyContainer.scrollLeft;\n    }\n  },\n  currentPositionY: function currentPositionY(scrollSpyContainer) {\n    if (scrollSpyContainer === document) {\n      var supportPageOffset = window.pageXOffset !== undefined;\n      var isCSS1Compat = (document.compatMode || \"\") === \"CSS1Compat\";\n      return supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop;\n    } else {\n      return scrollSpyContainer.scrollTop;\n    }\n  },\n  scrollHandler: function scrollHandler(scrollSpyContainer) {\n    var callbacks = scrollSpy.scrollSpyContainers[scrollSpy.scrollSpyContainers.indexOf(scrollSpyContainer)].spyCallbacks || [];\n    callbacks.forEach(function (c) {\n      return c(scrollSpy.currentPositionX(scrollSpyContainer), scrollSpy.currentPositionY(scrollSpyContainer));\n    });\n  },\n  addStateHandler: function addStateHandler(handler) {\n    scrollSpy.spySetState.push(handler);\n  },\n  addSpyHandler: function addSpyHandler(handler, scrollSpyContainer) {\n    var container = scrollSpy.scrollSpyContainers[scrollSpy.scrollSpyContainers.indexOf(scrollSpyContainer)];\n\n    if (!container.spyCallbacks) {\n      container.spyCallbacks = [];\n    }\n\n    container.spyCallbacks.push(handler);\n\n    handler(scrollSpy.currentPositionX(scrollSpyContainer), scrollSpy.currentPositionY(scrollSpyContainer));\n  },\n  updateStates: function updateStates() {\n    scrollSpy.spySetState.forEach(function (s) {\n      return s();\n    });\n  },\n  unmount: function unmount(stateHandler, spyHandler) {\n    scrollSpy.scrollSpyContainers.forEach(function (c) {\n      return c.spyCallbacks && c.spyCallbacks.length && c.spyCallbacks.indexOf(spyHandler) > -1 && c.spyCallbacks.splice(c.spyCallbacks.indexOf(spyHandler), 1);\n    });\n\n    if (scrollSpy.spySetState && scrollSpy.spySetState.length && scrollSpy.spySetState.indexOf(stateHandler) > -1) {\n      scrollSpy.spySetState.splice(scrollSpy.spySetState.indexOf(stateHandler), 1);\n    }\n\n    document.removeEventListener('scroll', scrollSpy.scrollHandler);\n  },\n\n\n  update: function update() {\n    return scrollSpy.scrollSpyContainers.forEach(function (c) {\n      return scrollSpy.scrollHandler(c);\n    });\n  }\n};\n\nexports.default = scrollSpy;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _animateScroll = require('./animate-scroll');\n\nvar _animateScroll2 = _interopRequireDefault(_animateScroll);\n\nvar _scrollEvents = require('./scroll-events');\n\nvar _scrollEvents2 = _interopRequireDefault(_scrollEvents);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar __mapped = {};\nvar __activeLink = void 0;\n\nexports.default = {\n\n  unmount: function unmount() {\n    __mapped = {};\n  },\n\n  register: function register(name, element) {\n    __mapped[name] = element;\n  },\n\n  unregister: function unregister(name) {\n    delete __mapped[name];\n  },\n\n  get: function get(name) {\n    return __mapped[name] || document.getElementById(name) || document.getElementsByName(name)[0] || document.getElementsByClassName(name)[0];\n  },\n\n  setActiveLink: function setActiveLink(link) {\n    return __activeLink = link;\n  },\n\n  getActiveLink: function getActiveLink() {\n    return __activeLink;\n  },\n\n  scrollTo: function scrollTo(to, props) {\n\n    var target = this.get(to);\n\n    if (!target) {\n      console.warn(\"target Element not found\");\n      return;\n    }\n\n    props = _extends({}, props, { absolute: false });\n\n    var containerId = props.containerId;\n    var container = props.container;\n\n    var containerElement = void 0;\n    if (containerId) {\n      containerElement = document.getElementById(containerId);\n    } else if (container && container.nodeType) {\n      containerElement = container;\n    } else {\n      containerElement = document;\n    }\n\n    props.absolute = true;\n\n    var horizontal = props.horizontal;\n    var scrollOffset = _utils2.default.scrollOffset(containerElement, target, horizontal) + (props.offset || 0);\n\n    /*\r\n     * if animate is not provided just scroll into the view\r\n     */\n    if (!props.smooth) {\n      if (_scrollEvents2.default.registered['begin']) {\n        _scrollEvents2.default.registered['begin'](to, target);\n      }\n\n      if (containerElement === document) {\n        if (props.horizontal) {\n          window.scrollTo(scrollOffset, 0);\n        } else {\n          window.scrollTo(0, scrollOffset);\n        }\n      } else {\n        containerElement.scrollTop = scrollOffset;\n      }\n\n      if (_scrollEvents2.default.registered['end']) {\n        _scrollEvents2.default.registered['end'](to, target);\n      }\n\n      return;\n    }\n\n    /*\r\n     * Animate scrolling\r\n     */\n\n    _animateScroll2.default.animateTopScroll(scrollOffset, props, to, target);\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  /*\r\n   * https://github.com/oblador/angular-scroll (duScrollDefaultEasing)\r\n   */\n  defaultEasing: function defaultEasing(x) {\n    if (x < 0.5) {\n      return Math.pow(x * 2, 2) / 2;\n    }\n    return 1 - Math.pow((1 - x) * 2, 2) / 2;\n  },\n  /*\r\n   * https://gist.github.com/gre/1650294\r\n   */\n  // no easing, no acceleration\n  linear: function linear(x) {\n    return x;\n  },\n  // accelerating from zero velocity\n  easeInQuad: function easeInQuad(x) {\n    return x * x;\n  },\n  // decelerating to zero velocity\n  easeOutQuad: function easeOutQuad(x) {\n    return x * (2 - x);\n  },\n  // acceleration until halfway, then deceleration\n  easeInOutQuad: function easeInOutQuad(x) {\n    return x < .5 ? 2 * x * x : -1 + (4 - 2 * x) * x;\n  },\n  // accelerating from zero velocity \n  easeInCubic: function easeInCubic(x) {\n    return x * x * x;\n  },\n  // decelerating to zero velocity π\n  easeOutCubic: function easeOutCubic(x) {\n    return --x * x * x + 1;\n  },\n  // acceleration until halfway, then deceleration \n  easeInOutCubic: function easeInOutCubic(x) {\n    return x < .5 ? 4 * x * x * x : (x - 1) * (2 * x - 2) * (2 * x - 2) + 1;\n  },\n  // accelerating from zero velocity \n  easeInQuart: function easeInQuart(x) {\n    return x * x * x * x;\n  },\n  // decelerating to zero velocity \n  easeOutQuart: function easeOutQuart(x) {\n    return 1 - --x * x * x * x;\n  },\n  // acceleration until halfway, then deceleration\n  easeInOutQuart: function easeInOutQuart(x) {\n    return x < .5 ? 8 * x * x * x * x : 1 - 8 * --x * x * x * x;\n  },\n  // accelerating from zero velocity\n  easeInQuint: function easeInQuint(x) {\n    return x * x * x * x * x;\n  },\n  // decelerating to zero velocity\n  easeOutQuint: function easeOutQuint(x) {\n    return 1 + --x * x * x * x * x;\n  },\n  // acceleration until halfway, then deceleration \n  easeInOutQuint: function easeInOutQuint(x) {\n    return x < .5 ? 16 * x * x * x * x * x : 1 + 16 * --x * x * x * x * x;\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar updateHash = function updateHash(hash, historyUpdate) {\n  var hashVal = hash.indexOf(\"#\") === 0 ? hash.substring(1) : hash;\n  var hashToUpdate = hashVal ? \"#\" + hashVal : \"\";\n  var curLoc = window && window.location;\n  var urlToPush = hashToUpdate ? curLoc.pathname + curLoc.search + hashToUpdate : curLoc.pathname + curLoc.search;\n  historyUpdate ? history.pushState(history.state, \"\", urlToPush) : history.replaceState(history.state, \"\", urlToPush);\n};\n\nvar getHash = function getHash() {\n  return window.location.hash.replace(/^#/, \"\");\n};\n\nvar filterElementInContainer = function filterElementInContainer(container) {\n  return function (element) {\n    return container.contains ? container != element && container.contains(element) : !!(container.compareDocumentPosition(element) & 16);\n  };\n};\n\nvar isPositioned = function isPositioned(element) {\n  return getComputedStyle(element).position !== \"static\";\n};\n\nvar getElementOffsetInfoUntil = function getElementOffsetInfoUntil(element, predicate) {\n  var offsetTop = element.offsetTop;\n  var currentOffsetParent = element.offsetParent;\n\n  while (currentOffsetParent && !predicate(currentOffsetParent)) {\n    offsetTop += currentOffsetParent.offsetTop;\n    currentOffsetParent = currentOffsetParent.offsetParent;\n  }\n\n  return { offsetTop: offsetTop, offsetParent: currentOffsetParent };\n};\n\nvar scrollOffset = function scrollOffset(c, t, horizontal) {\n  if (horizontal) {\n    return c === document ? t.getBoundingClientRect().left + (window.scrollX || window.pageXOffset) : getComputedStyle(c).position !== \"static\" ? t.offsetLeft : t.offsetLeft - c.offsetLeft;\n  } else {\n    if (c === document) {\n      return t.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\n    }\n\n    // The offsetParent of an element, according to MDN, is its nearest positioned\n    // (an element whose position is anything other than static) ancestor. The offsetTop\n    // of an element is taken with respect to its offsetParent which may not neccessarily\n    // be its parentElement except the parent itself is positioned.\n\n    // So if containerElement is positioned, then it must be an offsetParent somewhere\n    // If it happens that targetElement is a descendant of the containerElement, and there\n    // is not intermediate positioned element between the two of them, i.e.\n    // targetElement\"s offsetParent is the same as the containerElement, then the\n    // distance between the two will be the offsetTop of the targetElement.\n    // If, on the other hand, there are intermediate positioned elements between the\n    // two entities, the distance between the targetElement and the containerElement\n    // will be the accumulation of the offsetTop of the element and that of its\n    // subsequent offsetParent until the containerElement is reached, since it\n    // will also be an offsetParent at some point due to the fact that it is positioned.\n\n    // If the containerElement is not positioned, then it can\"t be an offsetParent,\n    // which means that the offsetTop of the targetElement would not be with respect to it.\n    // However, if the two of them happen to have the same offsetParent, then\n    // the distance between them will be the difference between their offsetTop\n    // since they are both taken with respect to the same entity.\n    // The last resort would be to accumulate their offsetTop until a common\n    // offsetParent is reached (usually the document) and taking the difference\n    // between the accumulated offsetTops\n\n    if (isPositioned(c)) {\n      if (t.offsetParent !== c) {\n        var isContainerElementOrDocument = function isContainerElementOrDocument(e) {\n          return e === c || e === document;\n        };\n\n        var _getElementOffsetInfo = getElementOffsetInfoUntil(t, isContainerElementOrDocument),\n            offsetTop = _getElementOffsetInfo.offsetTop,\n            offsetParent = _getElementOffsetInfo.offsetParent;\n\n        if (offsetParent !== c) {\n          throw new Error(\"Seems containerElement is not an ancestor of the Element\");\n        }\n\n        return offsetTop;\n      }\n\n      return t.offsetTop;\n    }\n\n    if (t.offsetParent === c.offsetParent) {\n      return t.offsetTop - c.offsetTop;\n    }\n\n    var isDocument = function isDocument(e) {\n      return e === document;\n    };\n    return getElementOffsetInfoUntil(t, isDocument).offsetTop - getElementOffsetInfoUntil(c, isDocument).offsetTop;\n  }\n};\n\nexports.default = {\n  updateHash: updateHash,\n  getHash: getHash,\n  filterElementInContainer: filterElementInContainer,\n  scrollOffset: scrollOffset\n};"],"names":["_coreInitted","_window","_docEl","_body","_toArray","_config","smoother","_windowExists","window","_getGSAP","gsap","registerPlugin","_isString","value","_isFunction","_max","element","axis","dim","scroll","client","Math","max","_buildGetter","e","p","pageXOffset","toUpperCase","_getOffset","container","getBoundingClientRect","console","warn","x","y","rect","isRoot","cRect","top","clientTop","pageYOffset","scrollTop","left","clientLeft","scrollLeft","offsets","_parseVal","target","currentVal","offset","isNaN","charAt","parseFloat","substr","min","_initCore","document","body","documentElement","utils","toArray","config","autoKillThreshold","ScrollToPlugin","version","name","rawVars","register","core","init","tween","index","targets","data","this","snapType","getProperty","isWin","_clean","nodeType","result","vars","autoKill","getX","getY","xPrev","yPrev","globals","ScrollTrigger","set","scrollBehavior","snap","snapInline","style","scrollSnapType","add","offsetX","_props","push","skipX","offsetY","skipY","render","ratio","yDif","xDif","threshold","pt","_pt","r","d","_next","kill","onAutoKill","apply","onAutoKillParams","scrollTo","removeProperty","update","property","both","i","indexOf","splice","length","applyEffects","effects","speed","matchMedia","matches","applyParallaxEffects","animateTitles","trigger","endTrigger","start","end","from","duration","opacity","scrollTrigger","concat","toggleActions","initSectionTriggerMove","create","toggleClass","className","tlFooterParallel","tlParallel","timeline","scrub","ease","innerWidth","tlFooterHorizontal","tlHorizontal","tlServices1","endValue","tlServices2","getOffset","buildGetter","ScrollSmoother","ignoreMobileResize","test","navigator","userAgent","wrapper","content","smooth","normalizeScroll","timeLineHeaderItem","anime","translateY","delay","stagger","easing","begin","anim","animatables","forEach","animatable","transition","translateX","fadeInSlide","animationSvgLine","reverse","path","querySelector","strokeDashoffset","setDashoffset","el","direction","classList","complete","remove","setAttribute","animationSvgText","textPath","querySelectorAll","About","_ref","baseUrl","_useState2","_slicedToArray","useState","isContentExpanded","setIsContentExpanded","toggleButtonRef","useRef","textBlockRef","hideBoxRef","handleToggleClick","useCallback","prevState","useEffect","toggleButton","current","textBlock","hideBox","addEventListener","handleResize","removeEventListener","getPath","fileName","React","id","isWebpSupported","src","alt","type","ref","propTypes","PropTypes","isRequired","createRoot","Header","Footer","MenuFloat","setOffset","screenWidth","toggle","filename","href","Link","to","activeClass","spy","ignoreCancelEvents","viewBox","Action","invariant","message","Error","ResultType","Set","validMutationMethodsArr","validRequestMethodsArr","Symbol","LocationContext","useInRouterContext","useLocation","location","Promise","Members","pathname","endsWith","Element","title","handleScroll","header","mainContentTop","isDynamic","FUNC_ERROR_TEXT","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","g","Object","freeSelf","self","root","Function","objectToString","prototype","toString","nativeMax","nativeMin","now","Date","debounce","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","remainingWait","debounced","isInvoking","arguments","leadingEdge","toNumber","isObject","cancel","clearTimeout","flush","isSymbol","isObjectLike","call","other","valueOf","replace","isBinary","slice","module","exports","throttle","m","hydrateRoot","_typeof","iterator","a","constructor","support","createElement","toDataURL","defineProperty","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","_scrollLink2","obj","__esModule","default","ButtonElement","_React$Component","_classCallCheck","instance","_possibleConstructorReturn","ReferenceError","__proto__","getPrototypeOf","_inherits","subClass","superClass","setPrototypeOf","children","Component","_extends","assign","source","hasOwnProperty","_scrollElement2","_propTypes2","ElementWrapper","_this2","newProps","parentBindings","domNode","string","LinkElement","_temp","_this","_len","Array","_key","_Link2","_Button2","_Element2","_scroller2","_scrollEvents2","_scrollSpy2","_animateScroll2","_Helpers2","scrollSpy","defaultScroller","scrollHash","protoTypes","containerId","object","bool","oneOfType","number","onClick","absolute","onSetActive","onSetInactive","hashSpy","spyThrottle","Helpers","Scroll","customScroller","scroller","_initialiseProps","state","active","getScrollSpyContainer","getElementById","componentDidMount","scrollSpyContainer","isMounted","mount","mapContainer","addStateHandler","stateHandler","addSpyHandler","spyHandler","setState","componentWillUnmount","unmount","trim","prop","handleClick","event","stopPropagation","preventDefault","getActiveLink","isInitialized","elemTopBound","elemBottomBound","containerTop","get","cords","height","isInside","floor","isOutside","activeLink","setActiveLink","getHash","changeHash","updateStates","defaultProps","_React$Component2","_this3","childBindings","registerElems","componentDidUpdate","prevProps","unregister","_smooth2","_cancelEvents2","getAnimationType","defaultEasing","requestAnimationFrameHelper","currentWindowProperties","requestAnimationFrame","webkitRequestAnimationFrame","callback","getTime","currentPositionX","containerElement","supportPageOffset","isCSS1Compat","compatMode","currentPositionY","animateScroll","timestamp","delta","round","targetPosition","startPosition","progress","percent","currentPosition","ceil","horizontal","easedAnimate","bind","registered","setContainer","animateTopScroll","scrollOffset","delayTimeout","subscribe","setCancel","functionWrapper","proceedOptions","scrollToTop","scrollToBottom","scrollContainerWidth","scrollWidth","offsetWidth","html","clientWidth","scrollContainerHeight","scrollHeight","offsetHeight","clientHeight","toPosition","scrollMore","_passiveEventListeners","events","cancelEvent","addPassiveEventListener","eventName","listener","listenerName","attachedListeners","has","listeners","supportsPassiveOption","opts","passive","removePassiveEventListener","delete","Map","Events","scrollEvent","evtName","_utils2","mountFlag","initialized","containers","handleHashChange","initStateFromHash","hash","isInit","saveHashHistory","updateHash","_scrollHash2","activeStyle","_React$PureComponent","PureComponent","elemLeftBound","elemRightBound","containerLeft","width","_cords","_props$saveHashHistor","_props$saveHashHistor2","_saveHashHistory","_lodash2","spyCallbacks","spySetState","scrollSpyContainers","eventHandler","eventThrottler","throttleAmount","scrollHandler","c","handler","s","__mapped","__activeLink","getElementsByName","getElementsByClassName","link","pow","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","getElementOffsetInfoUntil","predicate","offsetTop","currentOffsetParent","offsetParent","historyUpdate","hashVal","substring","hashToUpdate","curLoc","urlToPush","search","history","pushState","replaceState","filterElementInContainer","contains","compareDocumentPosition","t","scrollX","getComputedStyle","position","offsetLeft","scrollY","isPositioned","_getElementOffsetInfo","isContainerElementOrDocument","isDocument"],"sourceRoot":""}